"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[4394],{3905:(e,a,n)=>{n.d(a,{Zo:()=>m,kt:()=>d});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},m=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,k=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return n?t.createElement(k,i(i({ref:a},m),{},{components:n})):t.createElement(k,i({ref:a},m))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2338:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=n(7462),r=(n(7294),n(3905));const o={},i="Macros",l={unversionedId:"guides/commands_pipelines/macros",id:"guides/commands_pipelines/macros",title:"Macros",description:"Since Version: 8.5",source:"@site/docs/guides/commands_pipelines/33_macros.md",sourceDirName:"guides/commands_pipelines",slug:"/guides/commands_pipelines/macros",permalink:"/docs/guides/commands_pipelines/macros",draft:!1,editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/guides/commands_pipelines/33_macros.md",tags:[],version:"current",sidebarPosition:33,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Utils",permalink:"/docs/guides/commands_pipelines/utils"},next:{title:"Controlling Pipeline Flow",permalink:"/docs/guides/commands_pipelines/controlling_flow"}},s={},p=[{value:"Declaring a macro",id:"declaring-a-macro",level:2},{value:"Accessing scope variables",id:"accessing-scope-variables",level:2},{value:"Calling a macro",id:"calling-a-macro",level:2},{value:"Report an Issue",id:"report-an-issue",level:2}],m={toc:p};function c(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"macros"},"Macros"),(0,r.kt)("p",{class:"theme-doc-version-badge badge badge--secondary"},"Since Version: 8.5"),(0,r.kt)("p",null,"Inside a ",(0,r.kt)("a",{parentName:"p",href:"/docs/commands_pipelines#pipeline"},"Pipeline ")," you can declare a custom macro using the command ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/commands#macro-v1"},(0,r.kt)("inlineCode",{parentName:"a"},"macro"))," and reuse it by calling the command ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/commands#macrorun-v1"},(0,r.kt)("inlineCode",{parentName:"a"},"macro.run")),"."),(0,r.kt)("h2",{id:"declaring-a-macro"},"Declaring a macro"),(0,r.kt)("p",null,"Here is a simple example to declare a macro in a pipeline:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n  - macro:\n      args:\n        firstName: "Some"\n        lastName:  "Name"\n      do: |\n        firstName + \' \' + lastName\n')),(0,r.kt)("p",null,"The parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"args")," defines the (optional) parameters to the macro as name-value pairs."),(0,r.kt)("p",null,"This arguments can be directly accessed by their names inside to the macro expression."),(0,r.kt)("p",null,"The macro expression is placed using the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"do"),". This can be any supported ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/commands_pipelines/pel"},"Pipeline Expression"),". Since the parameter is an explicit expression parameter, you do not need to use the expression brackets like ",(0,r.kt)("inlineCode",{parentName:"p"},"#{"),"and ",(0,r.kt)("inlineCode",{parentName:"p"},"}"),". They're optional."),(0,r.kt)("p",null,"This example will execute the macro with the pipeline flow and results in an output like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Some Name\n")),(0,r.kt)("h2",{id:"accessing-scope-variables"},"Accessing scope variables"),(0,r.kt)("p",null,"You can also access all scopes variables like ",(0,r.kt)("inlineCode",{parentName:"p"},"vars"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"body"),", as you would inside any Pipeline Expression:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'vars:\n  lastName: "Name"\npipeline:\n  - macro:\n      args:\n        firstName: "Some"\n      do: |\n        firstName + \' \' + vars.lastName\n')),(0,r.kt)("h2",{id:"calling-a-macro"},"Calling a macro"),(0,r.kt)("p",null,"In order to call a macro from another position in the pipeline, you have to first declare it using the command ",(0,r.kt)("inlineCode",{parentName:"p"},"macro")," and to define a name for the macro unique inside the pipelie using the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"."),(0,r.kt)("admonition",{title:"Note",type:"tip"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"A callable macro must be declared first in the pipeline, before it can be called."),(0,r.kt)("li",{parentName:"ul"},"It's good practise to define callable macros always at the very top of the pipeline."),(0,r.kt)("li",{parentName:"ul"},"Callable macro names must be unique within a pipeline."),(0,r.kt)("li",{parentName:"ul"},"A callable macro (= has ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," parameter) will be ignored by the pipeline flow and must be explicitely called using the command ",(0,r.kt)("inlineCode",{parentName:"li"},"macro.run"),"."))),(0,r.kt)("p",null,"Here is an example to declare such a callable macro:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n  - macro:\n      name: "concatNames"\n      args:\n        firstName: "Some"\n        lastName:  "Name"\n      do: |\n        firstName + \' \' + lastName\n\n')),(0,r.kt)("p",null,"As soon as such a macro has a ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," assigned, it will no longer be executed by the default pipeline flow, but ignored. Now, it can be executed only by calling the command ",(0,r.kt)("inlineCode",{parentName:"p"},"macro.run"),"."),(0,r.kt)("p",null,"In case you would like to execute this macro with the pipeline flow ",(0,r.kt)("strong",{parentName:"p"},"and")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"macro.run"),", you need to set the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"flow")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". "),(0,r.kt)("p",null,"Here is an example to call the macro ",(0,r.kt)("inlineCode",{parentName:"p"},"concatNames")," declared before:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  - macro:\n      name: "concatNames"\n      args:\n        firstName: "Some"\n        lastName:  "Name"\n      do: |\n        firstName + \' \' + lastName\n\n  - macro.run:\n      name: "concatNames"\n\n')),(0,r.kt)("p",null,"In case you do not define any args in ",(0,r.kt)("inlineCode",{parentName:"p"},"macro.run"),", the default args will be used. So the output here would be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Some Name\n")),(0,r.kt)("p",null,"You can overwrite the default args by re-declaring some or all of them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  - macro:\n      name: "concatNames"\n      args:\n        firstName: "Some"\n        lastName:  "Name"\n      do: |\n        firstName + \' \' + lastName\n\n  - macro.run:\n      name: "concatNames"\n      args:\n        firstName: "HELLO"\n\n')),(0,r.kt)("p",null,"Output would be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"HELLO Name\n")),(0,r.kt)("p",null,"By default, the result of the macro will be stored to the body. You can change that, by using the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"output")," to store it to any location like the vars scope for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  - macro:\n      name: "concatNames"\n      args:\n        firstName: "Some"\n        lastName:  "Name"\n      do: |\n        firstName + \' \' + lastName\n\n  - macro.run:\n      name: "concatNames"\n      args:\n        firstName: "HELLO"\n      output: vars.macroResult\n\n  - set.body:\n      value: "Result in variable macroResult: #{vars.macroResult}"\n\n')),(0,r.kt)("p",null,"This will create a body value like this after execution:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result in variable macroResult: HELLO Name\n")),(0,r.kt)("h2",{id:"report-an-issue"},"Report an Issue"),(0,r.kt)("admonition",{title:"Your help is needed!",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"In case you're missing something on this page, you found an error or you have an idea for improvement, please ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pipeforce/pipeforce.github.io/issues/new"},"click here to create a new issue"),". Another way to contribute is, to click ",(0,r.kt)("strong",{parentName:"p"},"Edit this page")," below and directly add your changes in GitHub. Many thanks for your contribution in order to improve PIPEFORCE!")))}c.isMDXComponent=!0}}]);