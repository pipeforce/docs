"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[5288],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,h=c["".concat(l,".").concat(d)]||c[d]||u[d]||o;return n?a.createElement(h,s(s({ref:t},m),{},{components:n})):a.createElement(h,s({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},142:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={},s="CSV to JSON Transformer",i={unversionedId:"guides/transformers/csv2json",id:"guides/transformers/csv2json",isDocsHomePage:!1,title:"CSV to JSON Transformer",description:"The transformer command transform.csv.json expects a CSV file which complies with the RFC4189 standard in the body or as input parameter of the command and converts it to a JSON document which can then be used for further processing.",source:"@site/docs/guides/transformers/020_csv2json.md",sourceDirName:"guides/transformers",slug:"/guides/transformers/csv2json",permalink:"/docs/guides/transformers/csv2json",editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/guides/transformers/020_csv2json.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/docs/guides/transformers/basics"},next:{title:"XML to JSON Transformer",permalink:"/docs/guides/transformers/xml2json"}},l=[{value:"Example 1: Arrays output format",id:"example-1-arrays-output-format",children:[],level:2},{value:"Example 2: Headers in rows",id:"example-2-headers-in-rows",children:[],level:2},{value:"Example 3: Hide counter fields",id:"example-3-hide-counter-fields",children:[],level:2},{value:"Example 4: Objects output format",id:"example-4-objects-output-format",children:[],level:2},{value:"Example 5: Set CSV as input param",id:"example-5-set-csv-as-input-param",children:[],level:2},{value:"Example 6: List as input",id:"example-6-list-as-input",children:[],level:2},{value:"Report an Issue",id:"report-an-issue",children:[],level:2}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"csv-to-json-transformer"},"CSV to JSON Transformer"),(0,r.kt)("p",null,"The transformer command ",(0,r.kt)("inlineCode",{parentName:"p"},"transform.csv.json")," expects a CSV file which complies with the ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc4180"},"RFC4189")," standard in the body or as ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," parameter of the command and converts it to a JSON document which can then be used for further processing."),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"../../api/commands#transformcsvjson-v1"},"commands reference")," for details about the available parameters of this command."),(0,r.kt)("h2",{id:"example-1-arrays-output-format"},"Example 1: Arrays output format"),(0,r.kt)("p",null,"If you use the transformer without any additional parameters, the JSON output will contain a nested arrays format for the rows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  # Set the CSV in the body\n  - set.body:\n      value: |\n        "firstName","lastName","age"\n        "Max","Smith","38"\n        "Susann","Mayr Wan","44\n\n  - transform.csv.json:\n')),(0,r.kt)("p",null,"The default output will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "columnsCount": 3,\n  "rowsCount": 2,\n  "headers": ["firstName","lastName","age"],\n  "rows": [\n    ["Max","Smith","38"],\n    ["Susann","Mayr Wan","44"]\n  ]\n}\n\n')),(0,r.kt)("h2",{id:"example-2-headers-in-rows"},"Example 2: Headers in rows"),(0,r.kt)("p",null,"By default the column header names of the CSV will be shown in an extra field ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," of the resulting JSON."),(0,r.kt)("p",null,"It is also possible to have these header names as part of the rows array and skip the extra ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," field:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  # Set the CSV in the body\n  - set.body:\n      value: |\n        "firstName","lastName","age"\n        "Max","Smith","38"\n        "Susann","Mayr Wan","44"\n\n  - transform.csv.json:\n      showHeadersField: false\n')),(0,r.kt)("p",null,"The output will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "columnsCount": 3,\n  "rowsCount": 3,\n  "rows": [\n    ["firstName","lastName","age"],\n    ["Max","Smith","38"],\n    ["Susann","Mayr Wan","44"]\n  ]\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"rowsCount")," now also counts the header line."))),(0,r.kt)("h2",{id:"example-3-hide-counter-fields"},"Example 3: Hide counter fields"),(0,r.kt)("p",null,"You can also hide all extra fields."),(0,r.kt)("p",null,"Here you can see the most simple output possible:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  # Set the CSV in the body\n  - set.body:\n      value: |\n        "firstName","lastName","age"\n        "Max","Smith","38"\n        "Susann","Mayr Wan","44"\n\n  - transform.csv.json:\n      showHeadersField: false\n      showColumnsCountField: false\n      showRowsCountField: false\n')),(0,r.kt)("p",null,"The output will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rows": [\n    ["firstName","lastName","age"],\n    ["Max","Smith","38"],\n    ["Susann","Mayr Wan","44"]\n  ]\n}\n\n')),(0,r.kt)("h2",{id:"example-4-objects-output-format"},"Example 4: Objects output format"),(0,r.kt)("p",null,"In some cases it is required, to have each row output as a JSON object with the header names as key."),(0,r.kt)("p",null,"To do so, you need to set the parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"rowsFormat")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"objects"),", then the JSON output will contain an array of JSON objects:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  # Set the CSV in the body\n  - set.body:\n      value: |\n        "firstName","lastName","age"\n        "Max","Smith","38"\n        "Susann","Mayr Wan","44"\n\n  - transform.csv.json:\n      rowsFormat: "objects" # Can be "objects" or "arrays" (default).\n')),(0,r.kt)("p",null,"The output will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "columnsCount": 3,\n  "rowsCount": 2,\n  "headers": ["firstName","lastName","age"],\n  "rows": [\n    {\n      "firstName": "Max",\n      "lastName": "Smith",\n      "age": "38"\n    },\n    {\n      "firstName": "Susann",\n      "lastName": "Mayr Wan",\n      "age": "44"\n    }\n  ]\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Note that this output format creates a much bigger JSON document. So if possible, you should prefer to work with the default rows format ",(0,r.kt)("inlineCode",{parentName:"p"},"arrays"),".  "))),(0,r.kt)("h2",{id:"example-5-set-csv-as-input-param"},"Example 5: Set CSV as input param"),(0,r.kt)("p",null,"Instead of reading the CSV from the body, you can also pass it as ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," param to the command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n\n  - transform.csv.json:\n      input: |\n        "firstName","lastName","age"\n        "Max","Smith","38"\n        "Susann","Mayr Wan","44"\n')),(0,r.kt)("p",null,"The output will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "columnsCount": 3,\n  "rowsCount": 2,\n  "headers": ["firstName","lastName","age"],\n  "rows": [\n    ["Max","Smith","38"],\n    ["Susann","Mayr Wan","44"]\n  ]\n}\n')),(0,r.kt)("h2",{id:"example-6-list-as-input"},"Example 6: List as input"),(0,r.kt)("p",null,"In this example you can see that it is also possible to define a simple list as input."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"pipeline:\n\n  - transform.csv.json:\n      hasHeadersLine: false\n      input: |\n        row1\n        row2\n        row3\n")),(0,r.kt)("p",null,"The output will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "columnsCount": 1,\n  "rowsCount": 3,\n  "rows": [\n    ["row1"],\n    ["row2"],\n    ["row3"]\n  ]\n}\n')),(0,r.kt)("h2",{id:"report-an-issue"},"Report an Issue"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Your help is needed!")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"In case you're missing something on this page, you found an error or you have an idea for improvement, please ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pipeforce/pipeforce.github.io/issues/new"},"click here to create a new issue"),". Another way to contribute is, to click ",(0,r.kt)("strong",{parentName:"p"},"Edit this page")," below and directly add your changes in GitHub. Many thanks for your contribution in order to improve PIPEFORCE!"))))}m.isMDXComponent=!0}}]);