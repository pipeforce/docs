"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[6391],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),m=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},o=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),o=m(a),k=l,h=o["".concat(d,".").concat(k)]||o[k]||s[k]||r;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=o;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var m=2;m<r;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}o.displayName="MDXCreateElement"},6077:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var n=a(7462),l=(a(7294),a(3905));const r={title:"Pipeline Functions Reference",sidebar_label:"Pipeline Functions"},i=void 0,p={unversionedId:"api/functions",id:"api/functions",isDocsHomePage:!1,title:"Pipeline Functions Reference",description:"Reference documentation of Pipeline Expression Language (PEL) Functions.",source:"@site/docs/api/functions.md",sourceDirName:"api",slug:"/api/functions",permalink:"/docs/api/functions",editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/api/functions.md",tags:[],version:"current",frontMatter:{title:"Pipeline Functions Reference",sidebar_label:"Pipeline Functions"},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/api/events"},next:{title:"Headers",permalink:"/docs/api/headers"}},d=[{value:"<code>@calc</code>",id:"calc",children:[{value:"sum(list)",id:"sumlist",children:[{value:"Returns",id:"returns",children:[],level:4},{value:"Parameters",id:"parameters",children:[],level:4},{value:"Example",id:"example",children:[],level:4}],level:3},{value:"avg(list)",id:"avglist",children:[{value:"Returns",id:"returns-1",children:[],level:4},{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Example",id:"example-1",children:[],level:4}],level:3}],level:2},{value:"<code>@content</code>",id:"content",children:[{value:"newCollection(uris)",id:"newcollectionuris",children:[{value:"Returns",id:"returns-2",children:[],level:4},{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Example",id:"example-2",children:[],level:4}],level:3},{value:"newCollection()",id:"newcollection",children:[{value:"Returns",id:"returns-3",children:[],level:4},{value:"Example",id:"example-3",children:[],level:4}],level:3},{value:"newContent(uri)",id:"newcontenturi",children:[{value:"Returns",id:"returns-4",children:[],level:4},{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Example",id:"example-4",children:[],level:4}],level:3}],level:2},{value:"<code>@convert</code>",id:"convert",children:[{value:"toBase64(value)",id:"tobase64value",children:[{value:"Returns",id:"returns-5",children:[],level:4},{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Example",id:"example-5",children:[],level:4}],level:3},{value:"fromBase64(base64String)",id:"frombase64base64string",children:[{value:"Returns",id:"returns-6",children:[],level:4},{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Example",id:"example-6",children:[],level:4}],level:3},{value:"fromBase64ToBytes(base64String)",id:"frombase64tobytesbase64string",children:[{value:"Returns",id:"returns-7",children:[],level:4},{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Example",id:"example-7",children:[],level:4}],level:3},{value:"toJson(object)",id:"tojsonobject",children:[{value:"Returns",id:"returns-8",children:[],level:4},{value:"Parameters",id:"parameters-7",children:[],level:4},{value:"Example",id:"example-8",children:[],level:4}],level:3},{value:"toXMLString(object)",id:"toxmlstringobject",children:[{value:"Returns",id:"returns-9",children:[],level:4},{value:"Parameters",id:"parameters-8",children:[],level:4},{value:"Example",id:"example-9",children:[],level:4}],level:3},{value:"toDOM(object)",id:"todomobject",children:[{value:"Returns",id:"returns-10",children:[],level:4},{value:"Parameters",id:"parameters-9",children:[],level:4},{value:"Example",id:"example-10",children:[],level:4}],level:3},{value:"toMap(object)",id:"tomapobject",children:[{value:"Returns",id:"returns-11",children:[],level:4},{value:"Parameters",id:"parameters-10",children:[],level:4},{value:"Example",id:"example-11",children:[],level:4}],level:3},{value:"toMapOrList(o)",id:"tomaporlisto",children:[{value:"Returns",id:"returns-12",children:[],level:4},{value:"Parameters",id:"parameters-11",children:[],level:4},{value:"Example",id:"example-12",children:[],level:4}],level:3},{value:"lazy(uri)",id:"lazyuri",children:[{value:"Returns",id:"returns-13",children:[],level:4},{value:"Parameters",id:"parameters-12",children:[],level:4},{value:"Example",id:"example-13",children:[],level:4}],level:3},{value:"toLong(value)",id:"tolongvalue",children:[{value:"Returns",id:"returns-14",children:[],level:4},{value:"Parameters",id:"parameters-13",children:[],level:4},{value:"Example",id:"example-14",children:[],level:4}],level:3},{value:"toInteger(value)",id:"tointegervalue",children:[{value:"Returns",id:"returns-15",children:[],level:4},{value:"Parameters",id:"parameters-14",children:[],level:4},{value:"Example",id:"example-15",children:[],level:4}],level:3},{value:"toBoolean(value)",id:"tobooleanvalue",children:[{value:"Returns",id:"returns-16",children:[],level:4},{value:"Parameters",id:"parameters-15",children:[],level:4},{value:"Example",id:"example-16",children:[],level:4}],level:3},{value:"toDecimal(value)",id:"todecimalvalue",children:[{value:"Returns",id:"returns-17",children:[],level:4},{value:"Parameters",id:"parameters-16",children:[],level:4},{value:"Example",id:"example-17",children:[],level:4}],level:3},{value:"toDecimal(value,decimalSymbol)",id:"todecimalvaluedecimalsymbol",children:[{value:"Returns",id:"returns-18",children:[],level:4},{value:"Parameters",id:"parameters-17",children:[],level:4},{value:"Example",id:"example-18",children:[],level:4}],level:3},{value:"toDecimal(value,pattern,decimalSymbol)",id:"todecimalvaluepatterndecimalsymbol",children:[{value:"Returns",id:"returns-19",children:[],level:4},{value:"Parameters",id:"parameters-18",children:[],level:4},{value:"Example",id:"example-19",children:[],level:4}],level:3},{value:"toDecimalString(value,pattern,decimalSymbol)",id:"todecimalstringvaluepatterndecimalsymbol",children:[{value:"Returns",id:"returns-20",children:[],level:4},{value:"Parameters",id:"parameters-19",children:[],level:4},{value:"Example",id:"example-20",children:[],level:4}],level:3},{value:"toDecimalString(value,decimalSymbol)",id:"todecimalstringvaluedecimalsymbol",children:[{value:"Returns",id:"returns-21",children:[],level:4},{value:"Parameters",id:"parameters-20",children:[],level:4},{value:"Example",id:"example-21",children:[],level:4}],level:3}],level:2},{value:"<code>@data</code>",id:"data",children:[{value:"set(data,path,value)",id:"setdatapathvalue",children:[{value:"Returns",id:"returns-22",children:[],level:4},{value:"Parameters",id:"parameters-21",children:[],level:4},{value:"Example",id:"example-22",children:[],level:4}],level:3},{value:"put(map,key,value)",id:"putmapkeyvalue",children:[{value:"Returns",id:"returns-23",children:[],level:4},{value:"Parameters",id:"parameters-22",children:[],level:4},{value:"Example",id:"example-23",children:[],level:4}],level:3},{value:"select(input,selections)",id:"selectinputselections",children:[{value:"Returns",id:"returns-24",children:[],level:4},{value:"Parameters",id:"parameters-23",children:[],level:4},{value:"Example",id:"example-24",children:[],level:4}],level:3},{value:"integerList(startInt,endInt)",id:"integerliststartintendint",children:[{value:"Returns",id:"returns-25",children:[],level:4},{value:"Parameters",id:"parameters-24",children:[],level:4},{value:"Example",id:"example-25",children:[],level:4}],level:3},{value:"size(value)",id:"sizevalue",children:[{value:"Returns",id:"returns-26",children:[],level:4},{value:"Parameters",id:"parameters-25",children:[],level:4},{value:"Example",id:"example-26",children:[],level:4}],level:3},{value:"isEmpty(data)",id:"isemptydata",children:[{value:"Returns",id:"returns-27",children:[],level:4},{value:"Parameters",id:"parameters-26",children:[],level:4},{value:"Example",id:"example-27",children:[],level:4}],level:3},{value:"has(data,attribute)",id:"hasdataattribute",children:[{value:"Returns",id:"returns-28",children:[],level:4},{value:"Parameters",id:"parameters-27",children:[],level:4},{value:"Example",id:"example-28",children:[],level:4}],level:3}],level:2},{value:"<code>@date</code>",id:"date",children:[{value:"now()",id:"now",children:[{value:"Returns",id:"returns-29",children:[],level:4},{value:"Example",id:"example-29",children:[],level:4}],level:3},{value:"nowIso8601()",id:"nowiso8601",children:[{value:"Returns",id:"returns-30",children:[],level:4},{value:"Example",id:"example-30",children:[],level:4}],level:3},{value:"now(format)",id:"nowformat",children:[{value:"Returns",id:"returns-31",children:[],level:4},{value:"Parameters",id:"parameters-28",children:[],level:4},{value:"Example",id:"example-31",children:[],level:4}],level:3},{value:"now(zoneId,locale)",id:"nowzoneidlocale",children:[{value:"Returns",id:"returns-32",children:[],level:4},{value:"Parameters",id:"parameters-29",children:[],level:4},{value:"Example",id:"example-32",children:[],level:4}],level:3},{value:"guessAndFormat(dateTimeString,outputFormat)",id:"guessandformatdatetimestringoutputformat",children:[{value:"Returns",id:"returns-33",children:[],level:4},{value:"Parameters",id:"parameters-30",children:[],level:4},{value:"Example",id:"example-33",children:[],level:4}],level:3},{value:"format(inputDate,inputFormat,outputFormat)",id:"formatinputdateinputformatoutputformat",children:[{value:"Returns",id:"returns-34",children:[],level:4},{value:"Parameters",id:"parameters-31",children:[],level:4},{value:"Example",id:"example-34",children:[],level:4}],level:3},{value:"format(iso8601Date,format)",id:"formatiso8601dateformat",children:[{value:"Returns",id:"returns-35",children:[],level:4},{value:"Parameters",id:"parameters-32",children:[],level:4},{value:"Example",id:"example-35",children:[],level:4}],level:3},{value:"format(timestamp,format)",id:"formattimestampformat",children:[{value:"Returns",id:"returns-36",children:[],level:4},{value:"Parameters",id:"parameters-33",children:[],level:4},{value:"Example",id:"example-36",children:[],level:4}],level:3},{value:"year(dateString)",id:"yeardatestring",children:[{value:"Returns",id:"returns-37",children:[],level:4},{value:"Parameters",id:"parameters-34",children:[],level:4},{value:"Example",id:"example-37",children:[],level:4}],level:3},{value:"timestamp()",id:"timestamp",children:[{value:"Returns",id:"returns-38",children:[],level:4},{value:"Example",id:"example-38",children:[],level:4}],level:3},{value:"isExpired(iso8601Start,iso8601End,expiredInPercents)",id:"isexpirediso8601startiso8601endexpiredinpercents",children:[{value:"Returns",id:"returns-39",children:[],level:4},{value:"Parameters",id:"parameters-35",children:[],level:4},{value:"Example",id:"example-39",children:[],level:4}],level:3},{value:"isExpired(iso8601Start,iso8601End,expiredInPercents,currentDate)",id:"isexpirediso8601startiso8601endexpiredinpercentscurrentdate",children:[{value:"Returns",id:"returns-40",children:[],level:4},{value:"Parameters",id:"parameters-36",children:[],level:4},{value:"Example",id:"example-40",children:[],level:4}],level:3},{value:"isOverdue(dueDate,currentDate)",id:"isoverdueduedatecurrentdate",children:[{value:"Returns",id:"returns-41",children:[],level:4},{value:"Parameters",id:"parameters-37",children:[],level:4},{value:"Example",id:"example-41",children:[],level:4}],level:3},{value:"isOverdue(dueDate)",id:"isoverdueduedate",children:[{value:"Returns",id:"returns-42",children:[],level:4},{value:"Parameters",id:"parameters-38",children:[],level:4},{value:"Example",id:"example-42",children:[],level:4}],level:3},{value:"parseToInstant(dateTime)",id:"parsetoinstantdatetime",children:[{value:"Returns",id:"returns-43",children:[],level:4},{value:"Parameters",id:"parameters-39",children:[],level:4},{value:"Example",id:"example-43",children:[],level:4}],level:3},{value:"beginOfYear(yearOffset)",id:"beginofyearyearoffset",children:[{value:"Returns",id:"returns-44",children:[],level:4},{value:"Parameters",id:"parameters-40",children:[],level:4},{value:"Example",id:"example-44",children:[],level:4}],level:3},{value:"beginOfYear(timestamp,yearOffset)",id:"beginofyeartimestampyearoffset",children:[{value:"Returns",id:"returns-45",children:[],level:4},{value:"Parameters",id:"parameters-41",children:[],level:4},{value:"Example",id:"example-45",children:[],level:4}],level:3},{value:"beginOfMonth(monthOffset)",id:"beginofmonthmonthoffset",children:[{value:"Returns",id:"returns-46",children:[],level:4},{value:"Parameters",id:"parameters-42",children:[],level:4},{value:"Example",id:"example-46",children:[],level:4}],level:3},{value:"beginOfMonth(timestamp,monthOffset)",id:"beginofmonthtimestampmonthoffset",children:[{value:"Returns",id:"returns-47",children:[],level:4},{value:"Parameters",id:"parameters-43",children:[],level:4},{value:"Example",id:"example-47",children:[],level:4}],level:3},{value:"beginOfWeek(weekStartDay,weekOffset)",id:"beginofweekweekstartdayweekoffset",children:[{value:"Returns",id:"returns-48",children:[],level:4},{value:"Parameters",id:"parameters-44",children:[],level:4},{value:"Example",id:"example-48",children:[],level:4}],level:3},{value:"beginOfWeek(timestamp,weekStartDay,weekOffset)",id:"beginofweektimestampweekstartdayweekoffset",children:[{value:"Returns",id:"returns-49",children:[],level:4},{value:"Parameters",id:"parameters-45",children:[],level:4},{value:"Example",id:"example-49",children:[],level:4}],level:3},{value:"beginOfDay(dayOffset)",id:"beginofdaydayoffset",children:[{value:"Returns",id:"returns-50",children:[],level:4},{value:"Parameters",id:"parameters-46",children:[],level:4},{value:"Example",id:"example-50",children:[],level:4}],level:3},{value:"beginOfDay(timestamp,dayOffset)",id:"beginofdaytimestampdayoffset",children:[{value:"Returns",id:"returns-51",children:[],level:4},{value:"Parameters",id:"parameters-47",children:[],level:4},{value:"Example",id:"example-51",children:[],level:4}],level:3}],level:2},{value:"<code>@hash</code>",id:"hash",children:[{value:"sha256(input)",id:"sha256input",children:[{value:"Returns",id:"returns-52",children:[],level:4},{value:"Parameters",id:"parameters-48",children:[],level:4},{value:"Example",id:"example-52",children:[],level:4}],level:3},{value:"sha256Concat(separator,text)",id:"sha256concatseparatortext",children:[{value:"Returns",id:"returns-53",children:[],level:4},{value:"Parameters",id:"parameters-49",children:[],level:4},{value:"Example",id:"example-53",children:[],level:4}],level:3},{value:"sha256Concat(separator,text)",id:"sha256concatseparatortext-1",children:[{value:"Returns",id:"returns-54",children:[],level:4},{value:"Parameters",id:"parameters-50",children:[],level:4},{value:"Example",id:"example-54",children:[],level:4}],level:3},{value:"md5(input)",id:"md5input",children:[{value:"Returns",id:"returns-55",children:[],level:4},{value:"Parameters",id:"parameters-51",children:[],level:4},{value:"Example",id:"example-55",children:[],level:4}],level:3},{value:"md5Concat(separator,text)",id:"md5concatseparatortext",children:[{value:"Returns",id:"returns-56",children:[],level:4},{value:"Parameters",id:"parameters-52",children:[],level:4},{value:"Example",id:"example-56",children:[],level:4}],level:3},{value:"md5Concat(separator,text)",id:"md5concatseparatortext-1",children:[{value:"Returns",id:"returns-57",children:[],level:4},{value:"Parameters",id:"parameters-53",children:[],level:4},{value:"Example",id:"example-57",children:[],level:4}],level:3},{value:"sha512(input)",id:"sha512input",children:[{value:"Returns",id:"returns-58",children:[],level:4},{value:"Parameters",id:"parameters-54",children:[],level:4},{value:"Example",id:"example-58",children:[],level:4}],level:3},{value:"sha512Concat(separator,text)",id:"sha512concatseparatortext",children:[{value:"Returns",id:"returns-59",children:[],level:4},{value:"Parameters",id:"parameters-55",children:[],level:4},{value:"Example",id:"example-59",children:[],level:4}],level:3},{value:"sha512Concat(separator,text)",id:"sha512concatseparatortext-1",children:[{value:"Returns",id:"returns-60",children:[],level:4},{value:"Parameters",id:"parameters-56",children:[],level:4},{value:"Example",id:"example-60",children:[],level:4}],level:3}],level:2},{value:"<code>@iam</code>",id:"iam",children:[{value:"userByUuid(userUuid)",id:"userbyuuiduseruuid",children:[{value:"Returns",id:"returns-61",children:[],level:4},{value:"Parameters",id:"parameters-57",children:[],level:4},{value:"Example",id:"example-61",children:[],level:4}],level:3},{value:"userByUsername(username)",id:"userbyusernameusername",children:[{value:"Returns",id:"returns-62",children:[],level:4},{value:"Parameters",id:"parameters-58",children:[],level:4},{value:"Example",id:"example-62",children:[],level:4}],level:3},{value:"userByEmail(email)",id:"userbyemailemail",children:[{value:"Returns",id:"returns-63",children:[],level:4},{value:"Parameters",id:"parameters-59",children:[],level:4},{value:"Example",id:"example-63",children:[],level:4}],level:3}],level:2},{value:"<code>@instance</code>",id:"instance",children:[{value:"domain()",id:"domain",children:[{value:"Returns",id:"returns-64",children:[],level:4},{value:"Example",id:"example-64",children:[],level:4}],level:3},{value:"namespace()",id:"namespace",children:[{value:"Returns",id:"returns-65",children:[],level:4},{value:"Example",id:"example-65",children:[],level:4}],level:3},{value:"url(serviceName)",id:"urlservicename",children:[{value:"Returns",id:"returns-66",children:[],level:4},{value:"Parameters",id:"parameters-60",children:[],level:4},{value:"Example",id:"example-66",children:[],level:4}],level:3},{value:"url()",id:"url",children:[{value:"Returns",id:"returns-67",children:[],level:4},{value:"Example",id:"example-67",children:[],level:4}],level:3},{value:"profiles()",id:"profiles",children:[{value:"Returns",id:"returns-68",children:[],level:4},{value:"Example",id:"example-68",children:[],level:4}],level:3},{value:"hasProfile(profiles)",id:"hasprofileprofiles",children:[{value:"Returns",id:"returns-69",children:[],level:4},{value:"Parameters",id:"parameters-61",children:[],level:4},{value:"Example",id:"example-69",children:[],level:4}],level:3},{value:"stage()",id:"stage",children:[{value:"Returns",id:"returns-70",children:[],level:4},{value:"Example",id:"example-70",children:[],level:4}],level:3},{value:"version()",id:"version",children:[{value:"Returns",id:"returns-71",children:[],level:4},{value:"Example",id:"example-71",children:[],level:4}],level:3},{value:"build()",id:"build",children:[{value:"Returns",id:"returns-72",children:[],level:4},{value:"Example",id:"example-72",children:[],level:4}],level:3},{value:"edition()",id:"edition",children:[{value:"Returns",id:"returns-73",children:[],level:4},{value:"Example",id:"example-73",children:[],level:4}],level:3},{value:"storage()",id:"storage",children:[{value:"Returns",id:"returns-74",children:[],level:4},{value:"Example",id:"example-74",children:[],level:4}],level:3},{value:"tag()",id:"tag",children:[{value:"Returns",id:"returns-75",children:[],level:4},{value:"Example",id:"example-75",children:[],level:4}],level:3},{value:"uptime()",id:"uptime",children:[{value:"Returns",id:"returns-76",children:[],level:4},{value:"Example",id:"example-76",children:[],level:4}],level:3},{value:"defaultImageRepo(image)",id:"defaultimagerepoimage",children:[{value:"Returns",id:"returns-77",children:[],level:4},{value:"Parameters",id:"parameters-62",children:[],level:4},{value:"Example",id:"example-77",children:[],level:4}],level:3}],level:2},{value:"<code>@json</code>",id:"json",children:[{value:"load(source)",id:"loadsource",children:[{value:"Returns",id:"returns-78",children:[],level:4},{value:"Parameters",id:"parameters-63",children:[],level:4},{value:"Example",id:"example-78",children:[],level:4}],level:3},{value:"path(json,query)",id:"pathjsonquery",children:[{value:"Returns",id:"returns-79",children:[],level:4},{value:"Parameters",id:"parameters-64",children:[],level:4},{value:"Example",id:"example-79",children:[],level:4}],level:3}],level:2},{value:"<code>@list</code>",id:"list",children:[{value:"first(value)",id:"firstvalue",children:[{value:"Returns",id:"returns-80",children:[],level:4},{value:"Parameters",id:"parameters-65",children:[],level:4},{value:"Example",id:"example-80",children:[],level:4}],level:3},{value:"last(value)",id:"lastvalue",children:[{value:"Returns",id:"returns-81",children:[],level:4},{value:"Parameters",id:"parameters-66",children:[],level:4},{value:"Example",id:"example-81",children:[],level:4}],level:3},{value:"size(list)",id:"sizelist",children:[{value:"Returns",id:"returns-82",children:[],level:4},{value:"Parameters",id:"parameters-67",children:[],level:4},{value:"Example",id:"example-82",children:[],level:4}],level:3},{value:"empty(list)",id:"emptylist",children:[{value:"Returns",id:"returns-83",children:[],level:4},{value:"Parameters",id:"parameters-68",children:[],level:4},{value:"Example",id:"example-83",children:[],level:4}],level:3},{value:"sublist(value,expression)",id:"sublistvalueexpression",children:[{value:"Returns",id:"returns-84",children:[],level:4},{value:"Parameters",id:"parameters-69",children:[],level:4},{value:"Example",id:"example-84",children:[],level:4}],level:3},{value:"add(list,element)",id:"addlistelement",children:[{value:"Returns",id:"returns-85",children:[],level:4},{value:"Parameters",id:"parameters-70",children:[],level:4},{value:"Example",id:"example-85",children:[],level:4}],level:3},{value:"add(list,element,ignoreNulls)",id:"addlistelementignorenulls",children:[{value:"Returns",id:"returns-86",children:[],level:4},{value:"Parameters",id:"parameters-71",children:[],level:4},{value:"Example",id:"example-86",children:[],level:4}],level:3},{value:"contains(list,needles)",id:"containslistneedles",children:[{value:"Returns",id:"returns-87",children:[],level:4},{value:"Parameters",id:"parameters-72",children:[],level:4},{value:"Example",id:"example-87",children:[],level:4}],level:3},{value:"create()",id:"create",children:[{value:"Returns",id:"returns-88",children:[],level:4},{value:"Example",id:"example-88",children:[],level:4}],level:3}],level:2},{value:"<code>@path</code>",id:"path",children:[{value:"join(pathItems)",id:"joinpathitems",children:[{value:"Returns",id:"returns-89",children:[],level:4},{value:"Parameters",id:"parameters-73",children:[],level:4},{value:"Example",id:"example-89",children:[],level:4}],level:3},{value:"extension(path)",id:"extensionpath",children:[{value:"Returns",id:"returns-90",children:[],level:4},{value:"Parameters",id:"parameters-74",children:[],level:4},{value:"Example",id:"example-90",children:[],level:4}],level:3},{value:"basename(path)",id:"basenamepath",children:[{value:"Returns",id:"returns-91",children:[],level:4},{value:"Parameters",id:"parameters-75",children:[],level:4},{value:"Example",id:"example-91",children:[],level:4}],level:3}],level:2},{value:"<code>@property</code>",id:"property",children:[{value:"value(key)",id:"valuekey",children:[{value:"Returns",id:"returns-92",children:[],level:4},{value:"Parameters",id:"parameters-76",children:[],level:4},{value:"Example",id:"example-92",children:[],level:4}],level:3},{value:"values(pattern)",id:"valuespattern",children:[{value:"Returns",id:"returns-93",children:[],level:4},{value:"Parameters",id:"parameters-77",children:[],level:4},{value:"Example",id:"example-93",children:[],level:4}],level:3},{value:"updateValue(key,value)",id:"updatevaluekeyvalue",children:[{value:"Returns",id:"returns-94",children:[],level:4},{value:"Parameters",id:"parameters-78",children:[],level:4},{value:"Example",id:"example-94",children:[],level:4}],level:3},{value:"get(key)",id:"getkey",children:[{value:"Returns",id:"returns-95",children:[],level:4},{value:"Parameters",id:"parameters-79",children:[],level:4},{value:"Example",id:"example-95",children:[],level:4}],level:3},{value:"lazy(key)",id:"lazykey",children:[{value:"Returns",id:"returns-96",children:[],level:4},{value:"Parameters",id:"parameters-80",children:[],level:4},{value:"Example",id:"example-96",children:[],level:4}],level:3}],level:2},{value:"<code>@text</code>",id:"text",children:[{value:"upperCase(text)",id:"uppercasetext",children:[{value:"Returns",id:"returns-97",children:[],level:4},{value:"Parameters",id:"parameters-81",children:[],level:4},{value:"Example",id:"example-97",children:[],level:4}],level:3},{value:"lastIndexOf(text,needle,offset)",id:"lastindexoftextneedleoffset",children:[{value:"Returns",id:"returns-98",children:[],level:4},{value:"Parameters",id:"parameters-82",children:[],level:4},{value:"Example",id:"example-98",children:[],level:4}],level:3},{value:"indexOf(text,needle)",id:"indexoftextneedle",children:[{value:"Returns",id:"returns-99",children:[],level:4},{value:"Parameters",id:"parameters-83",children:[],level:4},{value:"Example",id:"example-99",children:[],level:4}],level:3},{value:"indexOf(text,needle,offset)",id:"indexoftextneedleoffset",children:[{value:"Returns",id:"returns-100",children:[],level:4},{value:"Parameters",id:"parameters-84",children:[],level:4},{value:"Example",id:"example-100",children:[],level:4}],level:3},{value:"prefix(text,stop)",id:"prefixtextstop",children:[{value:"Returns",id:"returns-101",children:[],level:4},{value:"Parameters",id:"parameters-85",children:[],level:4},{value:"Example",id:"example-101",children:[],level:4}],level:3},{value:"suffix(text,stop)",id:"suffixtextstop",children:[{value:"Returns",id:"returns-102",children:[],level:4},{value:"Parameters",id:"parameters-86",children:[],level:4},{value:"Example",id:"example-102",children:[],level:4}],level:3},{value:"lowerCase(text)",id:"lowercasetext",children:[{value:"Returns",id:"returns-103",children:[],level:4},{value:"Parameters",id:"parameters-87",children:[],level:4},{value:"Example",id:"example-103",children:[],level:4}],level:3},{value:"isEmpty(text)",id:"isemptytext",children:[{value:"Returns",id:"returns-104",children:[],level:4},{value:"Parameters",id:"parameters-88",children:[],level:4},{value:"Example",id:"example-104",children:[],level:4}],level:3},{value:"shorten(text,length)",id:"shortentextlength",children:[{value:"Returns",id:"returns-105",children:[],level:4},{value:"Parameters",id:"parameters-89",children:[],level:4},{value:"Example",id:"example-105",children:[],level:4}],level:3},{value:"length(text)",id:"lengthtext",children:[{value:"Returns",id:"returns-106",children:[],level:4},{value:"Parameters",id:"parameters-90",children:[],level:4},{value:"Example",id:"example-106",children:[],level:4}],level:3},{value:"contains(text,needles)",id:"containstextneedles",children:[{value:"Returns",id:"returns-107",children:[],level:4},{value:"Parameters",id:"parameters-91",children:[],level:4},{value:"Example",id:"example-107",children:[],level:4}],level:3},{value:"lang(text)",id:"langtext",children:[{value:"Returns",id:"returns-108",children:[],level:4},{value:"Parameters",id:"parameters-92",children:[],level:4},{value:"Example",id:"example-108",children:[],level:4}],level:3},{value:"random(size)",id:"randomsize",children:[{value:"Returns",id:"returns-109",children:[],level:4},{value:"Parameters",id:"parameters-93",children:[],level:4},{value:"Example",id:"example-109",children:[],level:4}],level:3},{value:"uuid()",id:"uuid",children:[{value:"Returns",id:"returns-110",children:[],level:4},{value:"Example",id:"example-110",children:[],level:4}],level:3},{value:"toHtml(text)",id:"tohtmltext",children:[{value:"Returns",id:"returns-111",children:[],level:4},{value:"Parameters",id:"parameters-94",children:[],level:4},{value:"Example",id:"example-111",children:[],level:4}],level:3},{value:"append(basetext,text)",id:"appendbasetexttext",children:[{value:"Returns",id:"returns-112",children:[],level:4},{value:"Parameters",id:"parameters-95",children:[],level:4},{value:"Example",id:"example-112",children:[],level:4}],level:3},{value:"concat(separator,collection)",id:"concatseparatorcollection",children:[{value:"Returns",id:"returns-113",children:[],level:4},{value:"Parameters",id:"parameters-96",children:[],level:4},{value:"Example",id:"example-113",children:[],level:4}],level:3},{value:"concat(separator,items)",id:"concatseparatoritems",children:[{value:"Returns",id:"returns-114",children:[],level:4},{value:"Parameters",id:"parameters-97",children:[],level:4},{value:"Example",id:"example-114",children:[],level:4}],level:3},{value:"commajoin(collection)",id:"commajoincollection",children:[{value:"Returns",id:"returns-115",children:[],level:4},{value:"Parameters",id:"parameters-98",children:[],level:4},{value:"Example",id:"example-115",children:[],level:4}],level:3},{value:"concatAndFormat(separator,collection,pel)",id:"concatandformatseparatorcollectionpel",children:[{value:"Returns",id:"returns-116",children:[],level:4},{value:"Parameters",id:"parameters-99",children:[],level:4},{value:"Example",id:"example-116",children:[],level:4}],level:3},{value:"startsWith(text,prefix)",id:"startswithtextprefix",children:[{value:"Returns",id:"returns-117",children:[],level:4},{value:"Parameters",id:"parameters-100",children:[],level:4},{value:"Example",id:"example-117",children:[],level:4}],level:3},{value:"replaceAll(text,needle,replacement)",id:"replacealltextneedlereplacement",children:[{value:"Returns",id:"returns-118",children:[],level:4},{value:"Parameters",id:"parameters-101",children:[],level:4},{value:"Example",id:"example-118",children:[],level:4}],level:3},{value:"substring(text,beginIndex)",id:"substringtextbeginindex",children:[{value:"Returns",id:"returns-119",children:[],level:4},{value:"Parameters",id:"parameters-102",children:[],level:4},{value:"Example",id:"example-119",children:[],level:4}],level:3},{value:"substring(text,beginIndex,endIndex)",id:"substringtextbeginindexendindex",children:[{value:"Returns",id:"returns-120",children:[],level:4},{value:"Parameters",id:"parameters-103",children:[],level:4},{value:"Example",id:"example-120",children:[],level:4}],level:3},{value:"trim(text)",id:"trimtext",children:[{value:"Returns",id:"returns-121",children:[],level:4},{value:"Parameters",id:"parameters-104",children:[],level:4},{value:"Example",id:"example-121",children:[],level:4}],level:3},{value:"isAllEmpty(text)",id:"isallemptytext",children:[{value:"Returns",id:"returns-122",children:[],level:4},{value:"Parameters",id:"parameters-105",children:[],level:4},{value:"Example",id:"example-122",children:[],level:4}],level:3},{value:"toAlphaNumeric(text)",id:"toalphanumerictext",children:[{value:"Returns",id:"returns-123",children:[],level:4},{value:"Parameters",id:"parameters-106",children:[],level:4},{value:"Example",id:"example-123",children:[],level:4}],level:3},{value:"firstCharUpper(text)",id:"firstcharuppertext",children:[{value:"Returns",id:"returns-124",children:[],level:4},{value:"Parameters",id:"parameters-107",children:[],level:4},{value:"Example",id:"example-124",children:[],level:4}],level:3},{value:"firstCharLower(text)",id:"firstcharlowertext",children:[{value:"Returns",id:"returns-125",children:[],level:4},{value:"Parameters",id:"parameters-108",children:[],level:4},{value:"Example",id:"example-125",children:[],level:4}],level:3},{value:"split(text,token)",id:"splittexttoken",children:[{value:"Returns",id:"returns-126",children:[],level:4},{value:"Parameters",id:"parameters-109",children:[],level:4},{value:"Example",id:"example-126",children:[],level:4}],level:3},{value:"matches(text,regexp)",id:"matchestextregexp",children:[{value:"Returns",id:"returns-127",children:[],level:4},{value:"Parameters",id:"parameters-110",children:[],level:4},{value:"Example",id:"example-127",children:[],level:4}],level:3}],level:2},{value:"<code>@uri</code>",id:"uri",children:[{value:"resolve(uri)",id:"resolveuri",children:[{value:"Returns",id:"returns-128",children:[],level:4},{value:"Parameters",id:"parameters-111",children:[],level:4},{value:"Example",id:"example-128",children:[],level:4}],level:3}],level:2},{value:"<code>@user</code>",id:"user",children:[{value:"username()",id:"username",children:[{value:"Returns",id:"returns-129",children:[],level:4},{value:"Example",id:"example-129",children:[],level:4}],level:3},{value:"uuid()",id:"uuid-1",children:[{value:"Returns",id:"returns-130",children:[],level:4},{value:"Example",id:"example-130",children:[],level:4}],level:3},{value:"hasPermission(permissionKeys)",id:"haspermissionpermissionkeys",children:[{value:"Returns",id:"returns-131",children:[],level:4},{value:"Parameters",id:"parameters-112",children:[],level:4},{value:"Example",id:"example-131",children:[],level:4}],level:3},{value:"displayName()",id:"displayname",children:[{value:"Returns",id:"returns-132",children:[],level:4},{value:"Example",id:"example-132",children:[],level:4}],level:3},{value:"emailAndDisplayName(object)",id:"emailanddisplaynameobject",children:[{value:"Returns",id:"returns-133",children:[],level:4},{value:"Parameters",id:"parameters-113",children:[],level:4},{value:"Example",id:"example-133",children:[],level:4}],level:3},{value:"emailAndDisplayName()",id:"emailanddisplayname",children:[{value:"Returns",id:"returns-134",children:[],level:4},{value:"Example",id:"example-134",children:[],level:4}],level:3},{value:"displayName(object)",id:"displaynameobject",children:[{value:"Returns",id:"returns-135",children:[],level:4},{value:"Parameters",id:"parameters-114",children:[],level:4},{value:"Example",id:"example-135",children:[],level:4}],level:3},{value:"email()",id:"email",children:[{value:"Returns",id:"returns-136",children:[],level:4},{value:"Example",id:"example-136",children:[],level:4}],level:3},{value:"email(object)",id:"emailobject",children:[{value:"Returns",id:"returns-137",children:[],level:4},{value:"Parameters",id:"parameters-115",children:[],level:4},{value:"Example",id:"example-137",children:[],level:4}],level:3},{value:"locale()",id:"locale",children:[{value:"Returns",id:"returns-138",children:[],level:4},{value:"Example",id:"example-138",children:[],level:4}],level:3},{value:"firstName()",id:"firstname",children:[{value:"Returns",id:"returns-139",children:[],level:4},{value:"Example",id:"example-139",children:[],level:4}],level:3},{value:"lastName()",id:"lastname",children:[{value:"Returns",id:"returns-140",children:[],level:4},{value:"Example",id:"example-140",children:[],level:4}],level:3},{value:"loggedIn()",id:"loggedin",children:[{value:"Returns",id:"returns-141",children:[],level:4},{value:"Example",id:"example-141",children:[],level:4}],level:3},{value:"zone()",id:"zone",children:[{value:"Returns",id:"returns-142",children:[],level:4},{value:"Example",id:"example-142",children:[],level:4}],level:3}],level:2},{value:"<code>@xml</code>",id:"xml",children:[{value:"xpath(document,xpath)",id:"xpathdocumentxpath",children:[{value:"Returns",id:"returns-143",children:[],level:4},{value:"Parameters",id:"parameters-116",children:[],level:4},{value:"Example",id:"example-143",children:[],level:4}],level:3},{value:"xpathAsText(document,xpath)",id:"xpathastextdocumentxpath",children:[{value:"Returns",id:"returns-144",children:[],level:4},{value:"Parameters",id:"parameters-117",children:[],level:4},{value:"Example",id:"example-144",children:[],level:4}],level:3}],level:2},{value:"Report an Issue",id:"report-an-issue",children:[],level:2}],m={toc:d};function u(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Reference documentation of ",(0,l.kt)("a",{parentName:"p",href:"pel"},"Pipeline Expression Language (PEL)")," Functions.  "),(0,l.kt)("p",null,"Example usage of the ",(0,l.kt)("inlineCode",{parentName:"p"},"@date")," function inside a PEL expression :  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:  \n  - log:  \n      message: "The current date is: #{@date.now()}"  \n')),(0,l.kt)("p",null,"Use the ",(0,l.kt)("a",{parentName:"p",href:"https://try.pipeforce.org"},"online workbench")," to get auto-completion for Pipeline Functions:  "),(0,l.kt)("p",null,(0,l.kt)("img",{src:a(5041).Z}),"  "),(0,l.kt)("h2",{id:"calc"},(0,l.kt)("inlineCode",{parentName:"h2"},"@calc")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple calculations of lists.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@calc"),(0,l.kt)("br",{parentName:"p"}),"\n","Note: This is a public interface. Methods exposed here can be accessed by external developers in the pipelines!  "),(0,l.kt)("h3",{id:"sumlist"},"sum(list)"),(0,l.kt)("p",null,'Does a "nice" sum the values of the given list with high precision.\nIf an item in the given list is a string, it will be tried\nto convert it to a number. If the value is null or cannot be converted it will be excluded from\nthe summary but no exception is thrown -> be nice.   '),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bigdecimal")," - The sum of the given list.  "),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list of numbers to sum-up.")))),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@calc.sum(list)  \n")),(0,l.kt)("h3",{id:"avglist"},"avg(list)"),(0,l.kt)("p",null,"Calculates the average on the value of given list with a precision of two decimal points.   "),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bigdecimal")," - The calculated AVG.  "),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list of numbers.")))),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@calc.avg(list)  \n")),(0,l.kt)("h2",{id:"content"},(0,l.kt)("inlineCode",{parentName:"h2"},"@content")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for creation and managing of content objects.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@content"),"  "),(0,l.kt)("h3",{id:"newcollectionuris"},"newCollection(uris)"),(0,l.kt)("p",null,"Creates a new content collection and initializes it with given uris.   "),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"contentcollection")," - A content collection with given uris.  "),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uris"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The list of content uris to add to the new collection.")))),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@content.newCollection(uris)  \n")),(0,l.kt)("h3",{id:"newcollection"},"newCollection()"),(0,l.kt)("p",null,"Creates a new, empty content collection at given location.   "),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"contentcollection")," - The new, empty content collection.  "),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@content.newCollection()  \n")),(0,l.kt)("h3",{id:"newcontenturi"},"newContent(uri)"),(0,l.kt)("p",null,"Creates a new uri content object and returns it.   "),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"icontent")," - The new content object.  "),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uri"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The uri to be used for the content object")))),(0,l.kt)("h4",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@content.newContent(uri)  \n")),(0,l.kt)("h2",{id:"convert"},(0,l.kt)("inlineCode",{parentName:"h2"},"@convert")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple conversion and encoding tasks.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@convert"),"  "),(0,l.kt)("h3",{id:"tobase64value"},"toBase64(value)"),(0,l.kt)("p",null,"Encodes the given value to base64. If value is not a text, it will be converted to a text before conversion.   "),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The encoded string.  "),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to encode.")))),(0,l.kt)("h4",{id:"example-5"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toBase64(value)  \n")),(0,l.kt)("h3",{id:"frombase64base64string"},"fromBase64(base64String)"),(0,l.kt)("p",null,"Decodes the given base64 encoded string.   "),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The decoded string.  "),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"base64String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The base64 encoded string.")))),(0,l.kt)("h4",{id:"example-6"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.fromBase64(base64String)  \n")),(0,l.kt)("h3",{id:"frombase64tobytesbase64string"},"fromBase64ToBytes(base64String)"),(0,l.kt)("p",null,"Decodes the given base64 encoded string.   "),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"byte[]")," - The decoded string as byte array.  "),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"base64String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The base64 encoded string.")))),(0,l.kt)("h4",{id:"example-7"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.fromBase64ToBytes(base64String)  \n")),(0,l.kt)("h3",{id:"tojsonobject"},"toJson(object)"),(0,l.kt)("p",null,"Converts a given object structure to JSON.   "),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"jsonnode")," - The resulting JSON.  "),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The object to convert.")))),(0,l.kt)("h4",{id:"example-8"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toJson(object)  \n")),(0,l.kt)("h3",{id:"toxmlstringobject"},"toXMLString(object)"),(0,l.kt)("p",null,"Converts a given object to an XML string.   "),(0,l.kt)("h4",{id:"returns-9"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The resulting XML string.  "),(0,l.kt)("h4",{id:"parameters-8"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The object to convert.")))),(0,l.kt)("h4",{id:"example-9"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toXMLString(object)  \n")),(0,l.kt)("h3",{id:"todomobject"},"toDOM(object)"),(0,l.kt)("p",null,"Converts a given object to an XML DOM representation.   "),(0,l.kt)("h4",{id:"returns-10"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"document")," - The resulting DOM tree.  "),(0,l.kt)("h4",{id:"parameters-9"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The object to convert.")))),(0,l.kt)("h4",{id:"example-10"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toDOM(object)  \n")),(0,l.kt)("h3",{id:"tomapobject"},"toMap(object)"),(0,l.kt)("p",null,"Converts the given object to a map structure.   "),(0,l.kt)("h4",{id:"returns-11"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"map")," - The converted map structure or null in case input was null.  "),(0,l.kt)("h4",{id:"parameters-10"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The object to convert to a map structure.")))),(0,l.kt)("h4",{id:"example-11"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toMap(object)  \n")),(0,l.kt)("h3",{id:"tomaporlisto"},"toMapOrList(o)"),(0,l.kt)("p",null,"Converts the given object to a map or list structure depending on which is more appropriate.   "),(0,l.kt)("h4",{id:"returns-12"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The converted map or list structure or null in case input was null.  "),(0,l.kt)("h4",{id:"parameters-11"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"o"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The object to convert to a map or list structure.")))),(0,l.kt)("h4",{id:"example-12"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toMapOrList(o)  \n")),(0,l.kt)("h3",{id:"lazyuri"},"lazy(uri)"),(0,l.kt)("p",null,"Converts all supported uri variants to LazyUriMap   "),(0,l.kt)("h4",{id:"returns-13"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The lazy uri map.  "),(0,l.kt)("h4",{id:"parameters-12"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uri"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The uri to load from.")))),(0,l.kt)("h4",{id:"example-13"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.lazy(uri)  \n")),(0,l.kt)("h3",{id:"tolongvalue"},"toLong(value)"),(0,l.kt)("p",null,'Converts the given value to a long value.\nIf input value is the boolean true or false, 1 or 0 as long is returned.\nIf input is the string "true" or "false, 1 or 0 as long is returned.\nIf input is empty string "", 0 is returned.   '),(0,l.kt)("h4",{id:"returns-14"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The converted long value or null in case the input was null.  "),(0,l.kt)("h4",{id:"parameters-13"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value object to convert to long.")))),(0,l.kt)("h4",{id:"example-14"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toLong(value)  \n")),(0,l.kt)("h3",{id:"tointegervalue"},"toInteger(value)"),(0,l.kt)("p",null,'Converts the given value to a long value.\nIf input value is the boolean true or false, 1 or 0 as int is returned.\nIf input is the string "true" or "false, 1 or 0 as int is returned.\nIf input is empty string "", 0 is returned.   '),(0,l.kt)("h4",{id:"returns-15"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"integer")," - The converted integer value or null in case the input was null.  "),(0,l.kt)("h4",{id:"parameters-14"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value object to convert to integer.")))),(0,l.kt)("h4",{id:"example-15"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toInteger(value)  \n")),(0,l.kt)("h3",{id:"tobooleanvalue"},"toBoolean(value)"),(0,l.kt)("p",null,'Converts the given value to a boolean value.\nIf input is the string "true" or "false, true or false as boolean is returned.\nIf input is empty string "", false is returned.\nIf input is null, false is returned.\nAny numeric value > 0, true is returned.\nAny numeric value <= 0, false is returned.   '),(0,l.kt)("h4",{id:"returns-16"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - The converted boolean value.  "),(0,l.kt)("h4",{id:"parameters-15"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value object to convert to boolean.")))),(0,l.kt)("h4",{id:"example-16"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toBoolean(value)  \n")),(0,l.kt)("h3",{id:"todecimalvalue"},"toDecimal(value)"),(0,l.kt)("p",null,"Converts the given value into a big decimal with given precision.   "),(0,l.kt)("h4",{id:"returns-17"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"double")," - The decimal number as double.  "),(0,l.kt)("h4",{id:"parameters-16"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to convert.")))),(0,l.kt)("h4",{id:"example-17"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toDecimal(value)  \n")),(0,l.kt)("h3",{id:"todecimalvaluedecimalsymbol"},"toDecimal(value,decimalSymbol)"),(0,l.kt)("p",null,"Converts the given value to a decimal number.   "),(0,l.kt)("h4",{id:"returns-18"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bigdecimal")," - The value as decimal number ready for calculations.  "),(0,l.kt)("h4",{id:"parameters-17"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to convert to decimal.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"decimalSymbol"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal symbol to be used. Can be a comma , a dot . or a locale tag like de,                      en, fr for example. If null or empty, the locale tag of the currently logged-in user is used.                      If this is null, locale tag de is used as default.")))),(0,l.kt)("h4",{id:"example-18"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toDecimal(value,decimalSymbol)  \n")),(0,l.kt)("h3",{id:"todecimalvaluepatterndecimalsymbol"},"toDecimal(value,pattern,decimalSymbol)"),(0,l.kt)("p",null,"Converts the given value to a decimal number by applying the given pattern and locale.   "),(0,l.kt)("h4",{id:"returns-19"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bigdecimal")," - The value as decimal number ready for calculations.  "),(0,l.kt)("h4",{id:"parameters-18"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to convert to decimal.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pattern"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal pattern to apply. For example: #.###")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"decimalSymbol"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal symbol to be used. Can be a comma , a dot . or a locale tag like de,                      en, fr for example. If null or empty, the locale tag of the currently logged-in user is used.                      If this is null, locale tag de is used as default.")))),(0,l.kt)("h4",{id:"example-19"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toDecimal(value,pattern,decimalSymbol)  \n")),(0,l.kt)("h3",{id:"todecimalstringvaluepatterndecimalsymbol"},"toDecimalString(value,pattern,decimalSymbol)"),(0,l.kt)("p",null,"Formats a given number to a decimal string using the given decimal pattern and\nlocale tag like de, en, fr aso.   "),(0,l.kt)("h4",{id:"returns-20"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The decimal string.  "),(0,l.kt)("h4",{id:"parameters-19"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal number to format to a string.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pattern"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal pattern like #.## for example.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"decimalSymbol"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal symbol to be used. Can be a comma , a dot . or a locale tag like de,                      en, fr for example. If null or empty, the locale tag of the currently logged-in user is used.                      If this is null, locale tag de is used as default.")))),(0,l.kt)("h4",{id:"example-20"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toDecimalString(value,pattern,decimalSymbol)  \n")),(0,l.kt)("h3",{id:"todecimalstringvaluedecimalsymbol"},"toDecimalString(value,decimalSymbol)"),(0,l.kt)("p",null,"Formats a given number to a decimal string using the given locale tag like de, en, fr aso.   "),(0,l.kt)("h4",{id:"returns-21"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The decimal string.  "),(0,l.kt)("h4",{id:"parameters-20"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal number to format to a string.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"decimalSymbol"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The decimal symbol to be used. Can be a comma , a dot . or a locale tag like de,                      en, fr for example. If null or empty, the locale tag of the currently logged-in user is used.                      If this is null, locale tag de is used as default.")))),(0,l.kt)("h4",{id:"example-21"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@convert.toDecimalString(value,decimalSymbol)  \n")),(0,l.kt)("h2",{id:"data"},(0,l.kt)("inlineCode",{parentName:"h2"},"@data")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple CRUD and transformation data operations.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@data"),"  "),(0,l.kt)("h3",{id:"setdatapathvalue"},"set(data,path,value)"),(0,l.kt)("p",null,"Sets the given value on the given data object at the given element path where every item is separated by a dot.\nIf an item at the given path doesnt exist, it will be created automatically (is supported by given object).\nFor example to create a new entry person.name inside a given map, you could use:"),(0,l.kt)("code",null,'set(someMap, "person.name", "Some Name")'),". This will create the nested map person with an entry of type name in it.",(0,l.kt)("h4",{id:"returns-22"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The data object with value set at the specific path.  "),(0,l.kt)("h4",{id:"parameters-21"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The data object.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The path inside the data object to set the value.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to set.")))),(0,l.kt)("h4",{id:"example-22"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.set(data,path,value)  \n")),(0,l.kt)("h3",{id:"putmapkeyvalue"},"put(map,key,value)"),(0,l.kt)("p",null,"Expects the given data to be map-like structure and puts the given value under given key to it.\nOverwrites any existing entry under this key.   "),(0,l.kt)("h4",{id:"returns-23"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The map like data structure with the new entry added.  "),(0,l.kt)("h4",{id:"parameters-22"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"map"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The map-like data structure.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The key to add the value under.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to add.")))),(0,l.kt)("h4",{id:"example-23"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.put(map,key,value)  \n")),(0,l.kt)("h3",{id:"selectinputselections"},"select(input,selections)"),(0,l.kt)("p",null,'Applies the given selection string on the given input object in order to extract\ndata from the input object. If there is more than one selection string, puts the\nresult of each string into a new map entry whereas the key is the selection string\nor the name from the "AS NAME" suffix (note the upper case AS). Examples of selection strings:'),(0,l.kt)("ul",null,(0,l.kt)("li",null,"'person.firstName' = Extracts the firstName from the input object and returns the result as a entry in the mapping using the key 'person.firstName'. If it is the only selection string, returns the value directly."),(0,l.kt)("li",null,"'person.firstName AS name' = Extracts the firstName from the input object and returns the result as a entry in the mapping using the key 'name'"),(0,l.kt)("li",null,"'person.hobbies.size()' = Extracts the number of hobbies from the input object and returns the result as a entry in the mapping using the key 'person.hobbies.size()'. If it is the only selection string, returns the value directly."),(0,l.kt)("li",null,"'person.hobbies.size() AS numOfHobbies' = Extracts the number of hobbies from the input object and returns the result as an entry in the mapping using the key 'numOfHobbies'")),(0,l.kt)("h4",{id:"returns-24"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The extracted data.  "),(0,l.kt)("h4",{id:"parameters-23"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The input to apply the selection strings on. May not be null.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"selections"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"One or more selection strings. If null or empty, returns an empty map.")))),(0,l.kt)("h4",{id:"example-24"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.select(input,selections)  \n")),(0,l.kt)("h3",{id:"integerliststartintendint"},"integerList(startInt,endInt)"),(0,l.kt)("p",null,"Creates a new list and fills it with integers from startIndex up to endIndex.\nFor example a call of createListWithIntegers(2, 5) would return a list with these entries:\n","[2,3,4,5]",".   "),(0,l.kt)("h4",{id:"returns-25"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list<integer>")," - A list of given size filled-up with digits.  "),(0,l.kt)("h4",{id:"parameters-24"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"startInt"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The start index to fill the list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endInt"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The end index to fill the list up to.")))),(0,l.kt)("h4",{id:"example-25"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.integerList(startInt,endInt)  \n")),(0,l.kt)("h3",{id:"sizevalue"},"size(value)"),(0,l.kt)("p",null,"Calculates the size of the given value regardless of the type it is.   "),(0,l.kt)("h4",{id:"returns-26"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The size of the value. Returns a size of 0 in case the input value is null or cannot be counted.  "),(0,l.kt)("h4",{id:"parameters-25"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value to count for size.")))),(0,l.kt)("h4",{id:"example-26"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.size(value)  \n")),(0,l.kt)("h3",{id:"isemptydata"},"isEmpty(data)"),(0,l.kt)("p",null,"Checks if given data structure is null or empty.\nFor example:"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"If it is a list, returns true in case the list contains no entry or is null."),(0,l.kt)("li",null,"If it is a map, returns true in case the map contains no entry or is null."),(0,l.kt)("li",null,"If it is a node, returns true in case the node contains no entry or is null."),(0,l.kt)("li",null,"If it is a string, returns true in case the string contains no chars or is null.")),(0,l.kt)("h4",{id:"returns-27"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case the given list is null or empty.  "),(0,l.kt)("h4",{id:"parameters-26"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The data structure to check.")))),(0,l.kt)("h4",{id:"example-27"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.isEmpty(data)  \n")),(0,l.kt)("h3",{id:"hasdataattribute"},"has(data,attribute)"),(0,l.kt)("p",null,"Checks whether given data object has an attribute, member or getter with given name.   "),(0,l.kt)("h4",{id:"returns-28"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case the data object has given attribute.  "),(0,l.kt)("h4",{id:"parameters-27"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The data object to scan for attribute.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"attribute"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The attribute name to search for.")))),(0,l.kt)("h4",{id:"example-28"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@data.has(data,attribute)  \n")),(0,l.kt)("h2",{id:"date"},(0,l.kt)("inlineCode",{parentName:"h2"},"@date")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple date and time handling.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@date"),"  "),(0,l.kt)("h3",{id:"now"},"now()"),(0,l.kt)("p",null,"Returns the current time at server side formatted using the preferred zone and locale of the currently logged-in user.   "),(0,l.kt)("h4",{id:"returns-29"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - A formatted date time string.  "),(0,l.kt)("h4",{id:"example-29"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.now()  \n")),(0,l.kt)("h3",{id:"nowiso8601"},"nowIso8601()"),(0,l.kt)("p",null,"Returns the current time at server side formatted using the ISO8601 time format.   "),(0,l.kt)("h4",{id:"returns-30"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - Current date and time formatted as ISO8601. For example: ",(0,l.kt)("code",null,"2021-05-30T17:30:00+02:00"),"  "),(0,l.kt)("h4",{id:"example-30"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.nowIso8601()  \n")),(0,l.kt)("h3",{id:"nowformat"},"now(format)"),(0,l.kt)("p",null,"Returns the current time at server side formatted using the preferred zone and locale of the currently logged-in user.   "),(0,l.kt)("h4",{id:"returns-31"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - A formatted date time string.  "),(0,l.kt)("h4",{id:"parameters-28"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"format"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The format pattern like dd.MM.YY HH:mm:ss for example.")))),(0,l.kt)("h4",{id:"example-31"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.now(format)  \n")),(0,l.kt)("h3",{id:"nowzoneidlocale"},"now(zoneId,locale)"),(0,l.kt)("p",null,"Returns the current time for the given zone and formats it using the default format of the given locale.   "),(0,l.kt)("h4",{id:"returns-32"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The formatted date time string.  "),(0,l.kt)("h4",{id:"parameters-29"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"zoneId"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The zoneId to be used. See ",(0,l.kt)("a",{parentName:"td",href:"http://www.iana.org/time-zones"},"http://www.iana.org/time-zones")," for official reference of these names.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"locale"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The locale to be used.")))),(0,l.kt)("h4",{id:"example-32"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.now(zoneId,locale)  \n")),(0,l.kt)("h3",{id:"guessandformatdatetimestringoutputformat"},"guessAndFormat(dateTimeString,outputFormat)"),(0,l.kt)("p",null,"Tries to guess the given date time string format, converts it internally to a date-time object\nand formats it finally to a string output using the given output format pattern.   "),(0,l.kt)("h4",{id:"returns-33"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The formatted date time string.  "),(0,l.kt)("h4",{id:"parameters-30"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dateTimeString"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The date-time string as input.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"outputFormat"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The output format pattern.")))),(0,l.kt)("h4",{id:"example-33"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.guessAndFormat(dateTimeString,outputFormat)  \n")),(0,l.kt)("h3",{id:"formatinputdateinputformatoutputformat"},"format(inputDate,inputFormat,outputFormat)"),(0,l.kt)("p",null,"Converts a given date string using the given inputFormat and converts it to the given outputFormat.   "),(0,l.kt)("h4",{id:"returns-34"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The formatted date time string.  "),(0,l.kt)("h4",{id:"parameters-31"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputDate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The input date string.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputFormat"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The input format pattern.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"outputFormat"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The output format pattern.")))),(0,l.kt)("h4",{id:"example-34"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.format(inputDate,inputFormat,outputFormat)  \n")),(0,l.kt)("h3",{id:"formatiso8601dateformat"},"format(iso8601Date,format)"),(0,l.kt)("p",null,'Converts a given ISO-8061 date string to a different format and returns it.\nFor example: An input date of "2030-01-10T20:00:00Z" with format of "dd.MM.yyyy" would result in "01.10.2030".   '),(0,l.kt)("h4",{id:"returns-35"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The formatted date time string.  "),(0,l.kt)("h4",{id:"parameters-32"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"iso8601Date"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The ISO-8061 formatted date to convert.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"format"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The format pattern.")))),(0,l.kt)("h4",{id:"example-35"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.format(iso8601Date,format)  \n")),(0,l.kt)("h3",{id:"formattimestampformat"},"format(timestamp,format)"),(0,l.kt)("p",null,"Converts a given unix timestamp to a formatted date time string and returns it.   "),(0,l.kt)("h4",{id:"returns-36"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The formatted date time string.  "),(0,l.kt)("h4",{id:"parameters-33"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"long")),(0,l.kt)("td",{parentName:"tr",align:null},"The unix timestamp in millis to format.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"format"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The format pattern.")))),(0,l.kt)("h4",{id:"example-36"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.format(timestamp,format)  \n")),(0,l.kt)("h3",{id:"yeardatestring"},"year(dateString)"),(0,l.kt)("p",null,"Tries to guess and extract the year of the given date string. This is not always working 100% since\nthe date formats can vary a lot.   "),(0,l.kt)("h4",{id:"returns-37"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The guessed year from the given string like 2012 for example.  "),(0,l.kt)("h4",{id:"parameters-34"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dateString"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A date string like 31.02.2012, 31.02.12, 2012/01/31, 31-01-12, 31-01-2012, 2012-01-31 23:59:59,                   or 2001-07-04T12:08:56.235-0700.")))),(0,l.kt)("h4",{id:"example-37"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.year(dateString)  \n")),(0,l.kt)("h3",{id:"timestamp"},"timestamp()"),(0,l.kt)("p",null,"Returns the current unix timestamp in millis.   "),(0,l.kt)("h4",{id:"returns-38"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The current timestamp in millis.  "),(0,l.kt)("h4",{id:"example-38"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.timestamp()  \n")),(0,l.kt)("h3",{id:"isexpirediso8601startiso8601endexpiredinpercents"},"isExpired(iso8601Start,iso8601End,expiredInPercents)"),(0,l.kt)("p",null,"Returns true, if the given amount of time is already expired.\nLets see this example: Given is a starttime of 1st January, 2020 an endttime of\n11th January, 2020 and an expiredInPercents of 0,7 (70%). In this case the method would return\ntrue on 9th of January, 2020 but false on 3rd of January, 2020.\nAlso see ","{","@link DateTimeUtil#isExpired(Instant, Instant, float)","}",".   "),(0,l.kt)("h4",{id:"returns-39"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true, if the given amount of time is already expired.  "),(0,l.kt)("h4",{id:"parameters-35"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"iso8601Start"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The start time for the time range in ISO-8601 format.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"iso8601End"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The endtime for the time range in ISO-8601 format.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"expiredInPercents"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"float")),(0,l.kt)("td",{parentName:"tr",align:null},"The percentage as float (e.g. 0,9 = 90%), the range is already expired.")))),(0,l.kt)("h4",{id:"example-39"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.isExpired(iso8601Start,iso8601End,expiredInPercents)  \n")),(0,l.kt)("h3",{id:"isexpirediso8601startiso8601endexpiredinpercentscurrentdate"},"isExpired(iso8601Start,iso8601End,expiredInPercents,currentDate)"),(0,l.kt)("p",null,"Returns true, if the given amount of time is already expired.\nLets see this example: Given is a starttime of 1st January, 2020 an endttime of\n11th January, 2020 and an expiredInPercents of 0,7 (70%). In this case the method would return\ntrue on 9th of January, 2020 but false on 3rd of January, 2020.\nAlso see ","{","@link DateTimeUtil#isExpired(Instant, Instant, float)","}",".   "),(0,l.kt)("h4",{id:"returns-40"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true, if the given amount of time is already expired.  "),(0,l.kt)("h4",{id:"parameters-36"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"iso8601Start"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The start time for the time range in ISO-8601 format.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"iso8601End"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The endtime for the time range in ISO-8601 format.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"expiredInPercents"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"float")),(0,l.kt)("td",{parentName:"tr",align:null},"The percentage as float (e.g. 0,9 = 90%), the range is already expired.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentDate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The current date, the calculation must use.")))),(0,l.kt)("h4",{id:"example-40"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.isExpired(iso8601Start,iso8601End,expiredInPercents,currentDate)  \n")),(0,l.kt)("h3",{id:"isoverdueduedatecurrentdate"},"isOverdue(dueDate,currentDate)"),(0,l.kt)("p",null,"Returns true in case if dueDate > currentDate.   "),(0,l.kt)("h4",{id:"returns-41"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case the give current date is overdue.  "),(0,l.kt)("h4",{id:"parameters-37"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dueDate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The due after overdue is true.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currentDate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The current date.")))),(0,l.kt)("h4",{id:"example-41"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.isOverdue(dueDate,currentDate)  \n")),(0,l.kt)("h3",{id:"isoverdueduedate"},"isOverdue(dueDate)"),(0,l.kt)("p",null,"Returns true in case if dueDate > currentDate.\nFor currentDate the current date and time from the system is used.   "),(0,l.kt)("h4",{id:"returns-42"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case the give current date is overdue.  "),(0,l.kt)("h4",{id:"parameters-38"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dueDate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The due after overdue is true.")))),(0,l.kt)("h4",{id:"example-42"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.isOverdue(dueDate)  \n")),(0,l.kt)("h3",{id:"parsetoinstantdatetime"},"parseToInstant(dateTime)"),(0,l.kt)("p",null,"Parses the given date time object to an instant date time object.   "),(0,l.kt)("h4",{id:"returns-43"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"instant")," - The instant parsed from the given date time object.  "),(0,l.kt)("h4",{id:"parameters-39"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dateTime"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The date time object to be parsed.")))),(0,l.kt)("h4",{id:"example-43"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.parseToInstant(dateTime)  \n")),(0,l.kt)("h3",{id:"beginofyearyearoffset"},"beginOfYear(yearOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the year relative to current year\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current year,\nyou would set yearOffset=0. To get the beginning timestamp of\nlast year, you would set yearOffset=-1. To get the beginning timestamp of\nnext year, you would set yearOffset=1.   "),(0,l.kt)("h4",{id:"returns-44"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the year relative to current year as epoch millis,\nwith hours, minutes, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-40"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"yearOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The years to be added (positive value) or subtracted (negative value) from current year.")))),(0,l.kt)("h4",{id:"example-44"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfYear(yearOffset)  \n")),(0,l.kt)("h3",{id:"beginofyeartimestampyearoffset"},"beginOfYear(timestamp,yearOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the year relative to given timestamp\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current year,\nyou would set timestamp=null, yearOffset=0. To get the beginning timestamp of\nlast year, you would set timestamp=null, yearOffset=-1. To get the beginning timestamp of\nnext year, you would set timestamp=null, yearOffset=1.   "),(0,l.kt)("h4",{id:"returns-45"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the year relative to given timestamp as epoch millis,\nwith hours, minutes, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-41"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"long")),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch millis to calculate the beginning of the year from.                   If null, the current timestamp will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"yearOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The years to be added (positive value) or subtracted (negative value) from given year.")))),(0,l.kt)("h4",{id:"example-45"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfYear(timestamp,yearOffset)  \n")),(0,l.kt)("h3",{id:"beginofmonthmonthoffset"},"beginOfMonth(monthOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the month relative to current month\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current month,\nyou would set monthOffset=0. To get the beginning timestamp of\nlast month, you would set monthOffset=-1. To get the beginning timestamp of\nnext month, you would set monthOffset=1.   "),(0,l.kt)("h4",{id:"returns-46"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the month relative to current month as epoch millis,\nwith hours, minutes, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-42"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"monthOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The months to be added (positive value) or subtracted (negative value) from current month.")))),(0,l.kt)("h4",{id:"example-46"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfMonth(monthOffset)  \n")),(0,l.kt)("h3",{id:"beginofmonthtimestampmonthoffset"},"beginOfMonth(timestamp,monthOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the month relative to given timestamp\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current month,\nyou would set timestamp=null, monthOffset=0. To get the beginning timestamp of\nlast month, you would set timestamp=null, monthOffset=-1. To get the beginning timestamp of\nnext month, you would set timestamp=null, monthOffset=1.   "),(0,l.kt)("h4",{id:"returns-47"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the month relative to given timestamp as epoch millis,\nwith hours, minutes, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-43"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"long")),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch millis to calculate the beginning of the month from.                    If null, the current timestamp will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"monthOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The months to be added (positive value) or subtracted (negative value) from given month.")))),(0,l.kt)("h4",{id:"example-47"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfMonth(timestamp,monthOffset)  \n")),(0,l.kt)("h3",{id:"beginofweekweekstartdayweekoffset"},"beginOfWeek(weekStartDay,weekOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the week relative to current week\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current week with Monday as start day,\nyou would set weekStartDay=1, weekOffset=0. To get the beginning timestamp of\nlast week, you would set weekStartDay=1, weekOffset=-1. To get the beginning timestamp of\nnext week, you would set weekStartDay=1, weekOffset=1.   "),(0,l.kt)("h4",{id:"returns-48"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the week relative to current week as epoch millis,\nwith hours, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-44"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"weekStartDay"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"The start day of the week as int from Monday(1) to Sunday(7).                     If null or negative, Monday(1) is used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"weekOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The weeks to be added (positive value) or subtracted (negative value) from current week.")))),(0,l.kt)("h4",{id:"example-48"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfWeek(weekStartDay,weekOffset)  \n")),(0,l.kt)("h3",{id:"beginofweektimestampweekstartdayweekoffset"},"beginOfWeek(timestamp,weekStartDay,weekOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the week relative to given timestamp\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current week with Monday as start day,\nyou would set timestamp=null, weekStartDay=null, weekOffset=0. To get the beginning timestamp of\nlast week, you would set timestamp=null, weekStartDay=null, weekOffset=-1. To get the beginning timestamp of\nnext week, you would set timestamp=null, weekStartDay=null, weekOffset=1.   "),(0,l.kt)("h4",{id:"returns-49"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the week relative to given timestamp as epoch millis, with hours, seconds\nand millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-45"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"long")),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch millis to calculate the beginning of the week from.                     If null, the current timestamp will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"weekStartDay"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"integer")),(0,l.kt)("td",{parentName:"tr",align:null},"The start day of the week as int from Monday(1) to Sunday(7).                     If null or negative, Monday(1) is used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"weekOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The weeks to be added (positive value) or subtracted (negative value) from given week.                     If you would like to know the start date of the week before for example,                     you would set this to -1. And for two weeks before you would set it to -2, aso.                     And to detect the beginning  of the week of the given timestamp, you would set it to 0.")))),(0,l.kt)("h4",{id:"example-49"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfWeek(timestamp,weekStartDay,weekOffset)  \n")),(0,l.kt)("h3",{id:"beginofdaydayoffset"},"beginOfDay(dayOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the day relative to current day\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current day,\nyou would set dayOffset=0. To get the beginning timestamp of\nyesterday, you would set dayOffset=-1. To get the beginning timestamp of\ntomorrow, you would set dayOffset=1.   "),(0,l.kt)("h4",{id:"returns-50"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the day relative to given current day as epoch millis,\nwith hours, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-46"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dayOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The days to be added (positive value) or subtracted (negative value) from current day.")))),(0,l.kt)("h4",{id:"example-50"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfDay(dayOffset)  \n")),(0,l.kt)("h3",{id:"beginofdaytimestampdayoffset"},"beginOfDay(timestamp,dayOffset)"),(0,l.kt)("p",null,"Returns the epoch timestamp in millis of the beginning of the day relative to given timestamp\nwith respect of the user's preference for time zone.\nFor example to get the timestamp of the beginning of the current day,\nyou would set timestamp=null, dayOffset=0. To get the beginning timestamp of\nyesterday, you would set timestamp=null, dayOffset=-1. To get the beginning timestamp of\ntomorrow, you would set timestamp=null, dayOffset=1.   "),(0,l.kt)("h4",{id:"returns-51"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The beginning of the day relative to given timestamp as epoch millis,\nwith hours, seconds and millis reset to 0.  "),(0,l.kt)("h4",{id:"parameters-47"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"long")),(0,l.kt)("td",{parentName:"tr",align:null},"The epoch millis to calculate the beginning of the day from.                  If null, the current timestamp will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dayOffset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The days to be added (positive value) or subtracted (negative value) from given day.")))),(0,l.kt)("h4",{id:"example-51"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@date.beginOfDay(timestamp,dayOffset)  \n")),(0,l.kt)("h2",{id:"hash"},(0,l.kt)("inlineCode",{parentName:"h2"},"@hash")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple hash handling.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@hash"),"  "),(0,l.kt)("h3",{id:"sha256input"},"sha256(input)"),(0,l.kt)("p",null,"Creates the SHA-256 hash from given input and returns it as hex string.   "),(0,l.kt)("h4",{id:"returns-52"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-48"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The input data to create a hash from. Can be a string, a byte array or a collection of strings.")))),(0,l.kt)("h4",{id:"example-52"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.sha256(input)  \n")),(0,l.kt)("h3",{id:"sha256concatseparatortext"},"sha256Concat(separator,text)"),(0,l.kt)("p",null,"Concatenates the given list of strings using the given separator and then calculates\nthe hash SHA-256 of the concatenated string.   "),(0,l.kt)("h4",{id:"returns-53"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-49"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator to be used to concat the string. If null, empty string will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text (list) to concat into a string.")))),(0,l.kt)("h4",{id:"example-53"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.sha256Concat(separator,text)  \n")),(0,l.kt)("h3",{id:"sha256concatseparatortext-1"},"sha256Concat(separator,text)"),(0,l.kt)("p",null,"Concatenates the given list of strings using the given separator and then calculates\nthe hash SHA-256 of the concatenated string.   "),(0,l.kt)("h4",{id:"returns-54"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-50"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator to be used to concat the string. If null, empty string will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"collection")),(0,l.kt)("td",{parentName:"tr",align:null},"The text (list) to concat into a string.")))),(0,l.kt)("h4",{id:"example-54"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.sha256Concat(separator,text)  \n")),(0,l.kt)("h3",{id:"md5input"},"md5(input)"),(0,l.kt)("p",null,"Creates the MD5 hash from given input and returns it as hex string.   "),(0,l.kt)("h4",{id:"returns-55"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-51"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The input data to create a hash from. Can be a string, a byte array or a collection of strings.")))),(0,l.kt)("h4",{id:"example-55"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.md5(input)  \n")),(0,l.kt)("h3",{id:"md5concatseparatortext"},"md5Concat(separator,text)"),(0,l.kt)("p",null,"Concatenates the given list of strings using the given separator and then calculates\nthe hash MD5 of the concatenated string.   "),(0,l.kt)("h4",{id:"returns-56"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-52"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator to be used to concat the string. If null, empty string will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text (list) to concat into a string.")))),(0,l.kt)("h4",{id:"example-56"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.md5Concat(separator,text)  \n")),(0,l.kt)("h3",{id:"md5concatseparatortext-1"},"md5Concat(separator,text)"),(0,l.kt)("p",null,"Concatenates the given list of strings using the given separator and then calculates\nthe hash MD5 of the concatenated string.   "),(0,l.kt)("h4",{id:"returns-57"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-53"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator to be used to concat the string. If null, empty string will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"collection")),(0,l.kt)("td",{parentName:"tr",align:null},"The text (list) to concat into a string.")))),(0,l.kt)("h4",{id:"example-57"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.md5Concat(separator,text)  \n")),(0,l.kt)("h3",{id:"sha512input"},"sha512(input)"),(0,l.kt)("p",null,"Creates the SHA-512 hash from given input and returns it as hex string.   "),(0,l.kt)("h4",{id:"returns-58"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-54"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"input"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The input data to create a hash from. Can be a string, a byte array or a collection of strings.")))),(0,l.kt)("h4",{id:"example-58"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.sha512(input)  \n")),(0,l.kt)("h3",{id:"sha512concatseparatortext"},"sha512Concat(separator,text)"),(0,l.kt)("p",null,"Concatenates the given list of strings using the given separator and then calculates\nthe hash SHA-512 of the concatenated string.   "),(0,l.kt)("h4",{id:"returns-59"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-55"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator to be used to concat the string. If null, empty string will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text (list) to concat into a string.")))),(0,l.kt)("h4",{id:"example-59"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.sha512Concat(separator,text)  \n")),(0,l.kt)("h3",{id:"sha512concatseparatortext-1"},"sha512Concat(separator,text)"),(0,l.kt)("p",null,"Concatenates the given list of strings using the given separator and then calculates\nthe hash SHA-512 of the concatenated string.   "),(0,l.kt)("h4",{id:"returns-60"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The hash as hex string  "),(0,l.kt)("h4",{id:"parameters-56"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator to be used to concat the string. If null, empty string will be used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"collection")),(0,l.kt)("td",{parentName:"tr",align:null},"The text (list) to concat into a string.")))),(0,l.kt)("h4",{id:"example-60"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@hash.sha512Concat(separator,text)  \n")),(0,l.kt)("h2",{id:"iam"},(0,l.kt)("inlineCode",{parentName:"h2"},"@iam")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for accessing IAM information.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@iam"),"  "),(0,l.kt)("h3",{id:"userbyuuiduseruuid"},"userByUuid(userUuid)"),(0,l.kt)("p",null,"Returns the user by given uuid or null in case no such user exists.   "),(0,l.kt)("h4",{id:"returns-61"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"user")," - The user with given uuid or null.  "),(0,l.kt)("h4",{id:"parameters-57"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userUuid"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The uuid of the user.")))),(0,l.kt)("h4",{id:"example-61"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@iam.userByUuid(userUuid)  \n")),(0,l.kt)("h3",{id:"userbyusernameusername"},"userByUsername(username)"),(0,l.kt)("p",null,"Returns the user by given username or null in case no such user exists.   "),(0,l.kt)("h4",{id:"returns-62"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"user")," - The user with given username or null.  "),(0,l.kt)("h4",{id:"parameters-58"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"username"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The username of the user.")))),(0,l.kt)("h4",{id:"example-62"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@iam.userByUsername(username)  \n")),(0,l.kt)("h3",{id:"userbyemailemail"},"userByEmail(email)"),(0,l.kt)("p",null,"Returns the user by given email or null in case no such user exists.   "),(0,l.kt)("h4",{id:"returns-63"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"user")," - The user with given email or null.  "),(0,l.kt)("h4",{id:"parameters-59"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The email of the user.")))),(0,l.kt)("h4",{id:"example-63"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@iam.userByEmail(email)  \n")),(0,l.kt)("h2",{id:"instance"},(0,l.kt)("inlineCode",{parentName:"h2"},"@instance")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression to return information about the current instance.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@instance"),"  "),(0,l.kt)("h3",{id:"domain"},"domain()"),(0,l.kt)("p",null,"Returns the domain, this hub instance is currently running in. For example: pipeforce.net   "),(0,l.kt)("h4",{id:"returns-64"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The domain name of this instance.  "),(0,l.kt)("h4",{id:"example-64"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.domain()  \n")),(0,l.kt)("h3",{id:"namespace"},"namespace()"),(0,l.kt)("p",null,"Returns the namespace, this hub instance is currently running in. For example: latest   "),(0,l.kt)("h4",{id:"returns-65"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The namespace of this instance.  "),(0,l.kt)("h4",{id:"example-65"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.namespace()  \n")),(0,l.kt)("h3",{id:"urlservicename"},"url(serviceName)"),(0,l.kt)("p",null,"Returns the full url for a given service in the current namespace. For example:\na call with 'workflow' could return '",(0,l.kt)("a",{parentName:"p",href:"http://workflow-myamespace.pipeforce.net'"},"http://workflow-myamespace.pipeforce.net'")," depending\non the namespace and domain configured for this instance.   "),(0,l.kt)("h4",{id:"returns-66"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The full url of the service.  "),(0,l.kt)("h4",{id:"parameters-60"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"serviceName"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The PIPEFORCE service name.")))),(0,l.kt)("h4",{id:"example-66"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.url(serviceName)  \n")),(0,l.kt)("h3",{id:"url"},"url()"),(0,l.kt)("p",null,"Returns the base url of the instance. For example: ",(0,l.kt)("a",{parentName:"p",href:"https://acme.pipeforce.net."},"https://acme.pipeforce.net."),"   "),(0,l.kt)("h4",{id:"returns-67"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The base url of this instance.  "),(0,l.kt)("h4",{id:"example-67"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.url()  \n")),(0,l.kt)("h3",{id:"profiles"},"profiles()"),(0,l.kt)("p",null,"The active profiles this instance is tagged with to run as.   "),(0,l.kt)("h4",{id:"returns-68"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list<string>")," - The active profiles as a list or empty list. Never null.  "),(0,l.kt)("h4",{id:"example-68"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.profiles()  \n")),(0,l.kt)("h3",{id:"hasprofileprofiles"},"hasProfile(profiles)"),(0,l.kt)("p",null,"Checks if this instance contains at least one profile from the given list.   "),(0,l.kt)("h4",{id:"returns-69"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true, in case at least one profile name from given list matches with a profile of the instance.  "),(0,l.kt)("h4",{id:"parameters-61"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"profiles"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"An array or comma separated list of profiles to check.")))),(0,l.kt)("h4",{id:"example-69"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.hasProfile(profiles)  \n")),(0,l.kt)("h3",{id:"stage"},"stage()"),(0,l.kt)("p",null,"Returns the stage the instance is running in.   "),(0,l.kt)("h4",{id:"returns-70"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The stage. Usually this is one of local, dev, qa, prod.  "),(0,l.kt)("h4",{id:"example-70"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.stage()  \n")),(0,l.kt)("h3",{id:"version"},"version()"),(0,l.kt)("p",null,"Returns the version number of this instance.   "),(0,l.kt)("h4",{id:"returns-71"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The version number.  "),(0,l.kt)("h4",{id:"example-71"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.version()  \n")),(0,l.kt)("h3",{id:"build"},"build()"),(0,l.kt)("p",null,"Returns the build ID of this instance.   "),(0,l.kt)("h4",{id:"returns-72"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The build ID.  "),(0,l.kt)("h4",{id:"example-72"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.build()  \n")),(0,l.kt)("h3",{id:"edition"},"edition()"),(0,l.kt)("p",null,"Returns edition of this instance.   "),(0,l.kt)("h4",{id:"returns-73"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The edition name.  "),(0,l.kt)("h4",{id:"example-73"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.edition()  \n")),(0,l.kt)("h3",{id:"storage"},"storage()"),(0,l.kt)("p",null,"Returns the storage info reserved for this instance (hub service).   "),(0,l.kt)("h4",{id:"returns-74"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The storage for the hub service.  "),(0,l.kt)("h4",{id:"example-74"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.storage()  \n")),(0,l.kt)("h3",{id:"tag"},"tag()"),(0,l.kt)("p",null,"Returns the full build tag of this instance.   "),(0,l.kt)("h4",{id:"returns-75"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The full build tag.  "),(0,l.kt)("h4",{id:"example-75"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.tag()  \n")),(0,l.kt)("h3",{id:"uptime"},"uptime()"),(0,l.kt)("p",null,"Returns the uptime of this instance. Note: Since PIPEFORCE is a clustered environment,\nupdate of a single hub service and the cluster could differ.   "),(0,l.kt)("h4",{id:"returns-76"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"long")," - The timestamp, when this instance was started (hub service).  "),(0,l.kt)("h4",{id:"example-76"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.uptime()  \n")),(0,l.kt)("h3",{id:"defaultimagerepoimage"},"defaultImageRepo(image)"),(0,l.kt)("p",null,"Prefixes the given image by the path of the default container image repository.\nWhen running inside GKE this is typically: gcr.io/pipeforce/","[image]","   "),(0,l.kt)("h4",{id:"returns-77"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The given image name prefixed with the default repo.\nOr the default repo prefix alone in case no image arg was given.  "),(0,l.kt)("h4",{id:"parameters-62"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"image"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The image name to be prefixed by the repo.")))),(0,l.kt)("h4",{id:"example-77"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@instance.defaultImageRepo(image)  \n")),(0,l.kt)("h2",{id:"json"},(0,l.kt)("inlineCode",{parentName:"h2"},"@json")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides functions inside a pipeline expression in order to read and change JSON documents.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@json"),"  "),(0,l.kt)("h3",{id:"loadsource"},"load(source)"),(0,l.kt)("p",null,"Loads the given source and converts it into a JSONful data object.   "),(0,l.kt)("h4",{id:"returns-78"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"jsonnode")," - The content data behind the source, converted to a JSONful data object.  "),(0,l.kt)("h4",{id:"parameters-63"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The JSON source to load.")))),(0,l.kt)("h4",{id:"example-78"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@json.load(source)  \n")),(0,l.kt)("h3",{id:"pathjsonquery"},"path(json,query)"),(0,l.kt)("p",null,"Applies a given JsonPath query to the given json object and returns the result.\nLearn more about the JsonPath syntax: ",(0,l.kt)("a",{parentName:"p",href:"https://goessner.net/articles/JsonPath/"},"https://goessner.net/articles/JsonPath/"),"   "),(0,l.kt)("h4",{id:"returns-79"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The result from the JsonPath query.  "),(0,l.kt)("h4",{id:"parameters-64"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"json"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The JSON object to apply the query to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"query"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The query to be applied.")))),(0,l.kt)("h4",{id:"example-79"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@json.path(json,query)  \n")),(0,l.kt)("h2",{id:"list"},(0,l.kt)("inlineCode",{parentName:"h2"},"@list")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple lists handling.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@list"),"  "),(0,l.kt)("h3",{id:"firstvalue"},"first(value)"),(0,l.kt)("p",null,"Returns the first element in list.   "),(0,l.kt)("h4",{id:"returns-80"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The first element from list or null in case list is null or empty.  "),(0,l.kt)("h4",{id:"parameters-65"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Any supported list object.")))),(0,l.kt)("h4",{id:"example-80"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.first(value)  \n")),(0,l.kt)("h3",{id:"lastvalue"},"last(value)"),(0,l.kt)("p",null,"Returns the last element in list.   "),(0,l.kt)("h4",{id:"returns-81"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The last element from list or null in case list is null or empty.  "),(0,l.kt)("h4",{id:"parameters-66"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Any supported list object.")))),(0,l.kt)("h4",{id:"example-81"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.last(value)  \n")),(0,l.kt)("h3",{id:"sizelist"},"size(list)"),(0,l.kt)("p",null,"Returns the size of the given list.\nDEPRECATED. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"@data.size(...)")," instead.   "),(0,l.kt)("h4",{id:"returns-82"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int")," - The size of the list. 0 in case list is null or unknown type.  "),(0,l.kt)("h4",{id:"parameters-67"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list.")))),(0,l.kt)("h4",{id:"example-82"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.size(list)  \n")),(0,l.kt)("h3",{id:"emptylist"},"empty(list)"),(0,l.kt)("p",null,"Checks if given list is null or empty.\nDEPRECATED. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"@data.isEmpty(...)")," instead.   "),(0,l.kt)("h4",{id:"returns-83"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case the given list is null or empty.  "),(0,l.kt)("h4",{id:"parameters-68"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list to check.")))),(0,l.kt)("h4",{id:"example-83"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.empty(list)  \n")),(0,l.kt)("h3",{id:"sublistvalueexpression"},"sublist(value,expression)"),(0,l.kt)("p",null,"Utility to get a subset from a list using a list expression. Examples:"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"last - Returns the last element in the list."),(0,l.kt)("li",null,"first - Returns the first element in the list."),(0,l.kt)("li",null,(0,l.kt)("code",null,"START:END")," - Returns all elements as a sublist from START (inclusive) up to the given END (inclusive)."),(0,l.kt)("li",null,(0,l.kt)("code",null,"INDEX:")," - Returns all elements as a sublist from INDEX (inclusive) up to the end of the list."),(0,l.kt)("li",null,(0,l.kt)("code",null,":INDEX")," - Returns all elements as a sublist from 0 up to INDEX (inclusive).")),(0,l.kt)("h4",{id:"returns-84"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The sublist.  "),(0,l.kt)("h4",{id:"parameters-69"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"Any list object.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"expression"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The list expression.")))),(0,l.kt)("h4",{id:"example-84"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.sublist(value,expression)  \n")),(0,l.kt)("h3",{id:"addlistelement"},"add(list,element)"),(0,l.kt)("p",null,"Appends the given element to the end of the given list.\nThis method is useful in case the list implementation is not clear since\nthis method can detect it (for example whether it is a collection or a JSON array).\nBy default doesn't add null items.   "),(0,l.kt)("h4",{id:"returns-85"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"collection")," - The input list with new element or a new list in case the input list was unmodifiable.  "),(0,l.kt)("h4",{id:"parameters-70"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list to append to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"element"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The element to append.")))),(0,l.kt)("h4",{id:"example-85"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.add(list,element)  \n")),(0,l.kt)("h3",{id:"addlistelementignorenulls"},"add(list,element,ignoreNulls)"),(0,l.kt)("p",null,"Appends the given element to the end of the given list.\nThis method is useful in case the list implementation is not clear since\nthis method can detect it (for example whether it is a collection or a JSON array).   "),(0,l.kt)("h4",{id:"returns-86"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"collection")," - The input list with new element or a new list in case the input list was unmodifiable.  "),(0,l.kt)("h4",{id:"parameters-71"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list to append to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"element"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The element to append.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ignoreNulls"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"If true, null items will not be added.")))),(0,l.kt)("h4",{id:"example-86"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.add(list,element,ignoreNulls)  \n")),(0,l.kt)("h3",{id:"containslistneedles"},"contains(list,needles)"),(0,l.kt)("p",null,"Searches the given list for the given needle.   "),(0,l.kt)("h4",{id:"returns-87"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - True if list contains at least one of needle items.  "),(0,l.kt)("h4",{id:"parameters-72"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"list"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list to search in.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"needles"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The items to search for. Can also be a list of items.")))),(0,l.kt)("h4",{id:"example-87"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.contains(list,needles)  \n")),(0,l.kt)("h3",{id:"create"},"create()"),(0,l.kt)("p",null,"Creates a new empty list.   "),(0,l.kt)("h4",{id:"returns-88"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list")," - A new, empty, modifiable list.  "),(0,l.kt)("h4",{id:"example-88"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@list.create()  \n")),(0,l.kt)("h2",{id:"path"},(0,l.kt)("inlineCode",{parentName:"h2"},"@path")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple path calculations.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@path"),"  "),(0,l.kt)("h3",{id:"joinpathitems"},"join(pathItems)"),(0,l.kt)("p",null,"Concats all given items to a single path. Also see ","{","@link PathUtil#path(Object...)","}",".   "),(0,l.kt)("h4",{id:"returns-89"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The joined path items as a path string.  "),(0,l.kt)("h4",{id:"parameters-73"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pathItems"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The path items to join as list.")))),(0,l.kt)("h4",{id:"example-89"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@path.join(pathItems)  \n")),(0,l.kt)("h3",{id:"extensionpath"},"extension(path)"),(0,l.kt)("p",null,"Returns the extension of a given filename (path).   "),(0,l.kt)("h4",{id:"returns-90"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The extension of the path without period (for example: txt)  "),(0,l.kt)("h4",{id:"parameters-74"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The path string.")))),(0,l.kt)("h4",{id:"example-90"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@path.extension(path)  \n")),(0,l.kt)("h3",{id:"basenamepath"},"basename(path)"),(0,l.kt)("p",null,'Returns the base name of a file without the extension. Also strips-off any\nID form the filename.\nFor example: "/folder/invoice.pdf" would return "invoice" and\n"/folder/invoice_ID-3fgh343.pdf" would return "invoice"   '),(0,l.kt)("h4",{id:"returns-91"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The base name of the path.  "),(0,l.kt)("h4",{id:"parameters-75"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The path string.")))),(0,l.kt)("h4",{id:"example-91"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@path.basename(path)  \n")),(0,l.kt)("h2",{id:"property"},(0,l.kt)("inlineCode",{parentName:"h2"},"@property")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides functions inside a pipeline expression in order to read properties from the property store.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@property"),"  "),(0,l.kt)("h3",{id:"valuekey"},"value(key)"),(0,l.kt)("p",null,"Returns the property value by given key from the property store.   "),(0,l.kt)("h4",{id:"returns-92"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The value of the property with given key or null in case property doesnt exist or has null value.  "),(0,l.kt)("h4",{id:"parameters-76"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The property key")))),(0,l.kt)("h4",{id:"example-92"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@property.value(key)  \n")),(0,l.kt)("h3",{id:"valuespattern"},"values(pattern)"),(0,l.kt)("p",null,"Returns the values of all properties matching the given key pattern.   "),(0,l.kt)("h4",{id:"returns-93"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list<object>")," - A list of values of all properties matching the given key pattern.  "),(0,l.kt)("h4",{id:"parameters-77"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pattern"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The property key pattern to match.")))),(0,l.kt)("h4",{id:"example-93"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@property.values(pattern)  \n")),(0,l.kt)("h3",{id:"updatevaluekeyvalue"},"updateValue(key,value)"),(0,l.kt)("p",null,"Updates the value of a property under given key.   "),(0,l.kt)("h4",{id:"returns-94"},"Returns"),(0,l.kt)("p",null,"void  "),(0,l.kt)("h4",{id:"parameters-78"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The key of the property to update.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The value of the property to update.")))),(0,l.kt)("h4",{id:"example-94"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@property.updateValue(key,value)  \n")),(0,l.kt)("h3",{id:"getkey"},"get(key)"),(0,l.kt)("p",null,"Returns the property with given key as object.   "),(0,l.kt)("h4",{id:"returns-95"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"property")," - The property with given key or null in case no such property has been found.  "),(0,l.kt)("h4",{id:"parameters-79"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The property key.")))),(0,l.kt)("h4",{id:"example-95"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@property.get(key)  \n")),(0,l.kt)("h3",{id:"lazykey"},"lazy(key)"),(0,l.kt)("p",null,"Returns the value of the property as a ","{","@link LazyUriMap","}"," map in case the result\nis a JSON document or its fragment. If uri fragment references leaf, primitive value is returned.\nIn all other cases an exception is thrown.\nFragment part of uri is evaluated as a SPEL against property value.   "),(0,l.kt)("h4",{id:"returns-96"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The lazy map.  "),(0,l.kt)("h4",{id:"parameters-80"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"key"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The property key with optional fragment reference in form 'global/pathsegment1/pathsegment...#fragment'")))),(0,l.kt)("h4",{id:"example-96"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@property.lazy(key)  \n")),(0,l.kt)("h2",{id:"text"},(0,l.kt)("inlineCode",{parentName:"h2"},"@text")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple calculations of lists.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@calc"),"  "),(0,l.kt)("h3",{id:"uppercasetext"},"upperCase(text)"),(0,l.kt)("p",null,"Converts the given text value to upper case.   "),(0,l.kt)("h4",{id:"returns-97"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The upper case text.  "),(0,l.kt)("h4",{id:"parameters-81"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to convert.")))),(0,l.kt)("h4",{id:"example-97"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.upperCase(text)  \n")),(0,l.kt)("h3",{id:"lastindexoftextneedleoffset"},"lastIndexOf(text,needle,offset)"),(0,l.kt)("p",null,"Returns the index of last occurrence of needle in the given text.   "),(0,l.kt)("h4",{id:"returns-98"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int")," - The index of needle inside text or -1 in case it was not found or input was null.  "),(0,l.kt)("h4",{id:"parameters-82"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search for occurrence.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"needle"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The index to start search from.")))),(0,l.kt)("h4",{id:"example-98"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.lastIndexOf(text,needle,offset)  \n")),(0,l.kt)("h3",{id:"indexoftextneedle"},"indexOf(text,needle)"),(0,l.kt)("p",null,"Returns the index of the first occurrence of needle in the given text.   "),(0,l.kt)("h4",{id:"returns-99"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int")," - The index of first occurrence of needle inside text or -1 in case it was not found or input was null.  "),(0,l.kt)("h4",{id:"parameters-83"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search for occurrence.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"needle"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search for.")))),(0,l.kt)("h4",{id:"example-99"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.indexOf(text,needle)  \n")),(0,l.kt)("h3",{id:"indexoftextneedleoffset"},"indexOf(text,needle,offset)"),(0,l.kt)("p",null,"Returns the index of the first occurrence of needle in the given text.   "),(0,l.kt)("h4",{id:"returns-100"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int")," - The index of first occurrence of needle inside text or -1 in case it was not found or input was null.  "),(0,l.kt)("h4",{id:"parameters-84"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search for occurrence.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"needle"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search for.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"offset"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The index to start search from.")))),(0,l.kt)("h4",{id:"example-100"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.indexOf(text,needle,offset)  \n")),(0,l.kt)("h3",{id:"prefixtextstop"},"prefix(text,stop)"),(0,l.kt)("p",null,'Returns the part from the beginning of the given text up to the stop word.\nFor example "Foo Bar" with stop word of " " would return "Foo" as prefix.   '),(0,l.kt)("h4",{id:"returns-101"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The part of text up to the first occurrence of the stop word.  "),(0,l.kt)("h4",{id:"parameters-85"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stop"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The stop word.")))),(0,l.kt)("h4",{id:"example-101"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.prefix(text,stop)  \n")),(0,l.kt)("h3",{id:"suffixtextstop"},"suffix(text,stop)"),(0,l.kt)("p",null,'Returns the part from the stop word of the given text up to the end of the word.\nFor example "Foo Bar" with stop word of " " would return "Bar" as suffix.   '),(0,l.kt)("h4",{id:"returns-102"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The part of text from stop word up to end of the text.  "),(0,l.kt)("h4",{id:"parameters-86"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stop"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The stop word.")))),(0,l.kt)("h4",{id:"example-102"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.suffix(text,stop)  \n")),(0,l.kt)("h3",{id:"lowercasetext"},"lowerCase(text)"),(0,l.kt)("p",null,"Converts the given text value to lower case.   "),(0,l.kt)("h4",{id:"returns-103"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The lower case text.  "),(0,l.kt)("h4",{id:"parameters-87"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text.")))),(0,l.kt)("h4",{id:"example-103"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.lowerCase(text)  \n")),(0,l.kt)("h3",{id:"isemptytext"},"isEmpty(text)"),(0,l.kt)("p",null,"Returns true if given text is empty or null.   "),(0,l.kt)("h4",{id:"returns-104"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true, in case the given text is an empty string or null.  "),(0,l.kt)("h4",{id:"parameters-88"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text.")))),(0,l.kt)("h4",{id:"example-104"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.isEmpty(text)  \n")),(0,l.kt)("h3",{id:"shortentextlength"},"shorten(text,length)"),(0,l.kt)("p",null,"Shorts the given string and adds ... at the end.   "),(0,l.kt)("h4",{id:"returns-105"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The shortened text.  "),(0,l.kt)("h4",{id:"parameters-89"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to shorten.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"length"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The length.")))),(0,l.kt)("h4",{id:"example-105"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.shorten(text,length)  \n")),(0,l.kt)("h3",{id:"lengthtext"},"length(text)"),(0,l.kt)("p",null,"Returns the len of the given text. In case the text is null, 0 is returned.   "),(0,l.kt)("h4",{id:"returns-106"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"int")," - The length of the text.  "),(0,l.kt)("h4",{id:"parameters-90"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text.")))),(0,l.kt)("h4",{id:"example-106"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.length(text)  \n")),(0,l.kt)("h3",{id:"containstextneedles"},"contains(text,needles)"),(0,l.kt)("p",null,"Checks whether given text contains at least one of given needle texts, ignoring case.\nAlso value and text can be null.   "),(0,l.kt)("h4",{id:"returns-107"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case text contains needle.  "),(0,l.kt)("h4",{id:"parameters-91"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to search in.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"needles"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A comma separated list of needles to search inside text.")))),(0,l.kt)("h4",{id:"example-107"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.contains(text,needles)  \n")),(0,l.kt)("h3",{id:"langtext"},"lang(text)"),(0,l.kt)("p",null,"Tries to detect the language of given text.   "),(0,l.kt)("h4",{id:"returns-108"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The detected language, one of: GERMAN, ENGLISH, FRENCH, UNKNOWN.  "),(0,l.kt)("h4",{id:"parameters-92"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to detect the language for.")))),(0,l.kt)("h4",{id:"example-108"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.lang(text)  \n")),(0,l.kt)("h3",{id:"randomsize"},"random(size)"),(0,l.kt)("p",null,"Creates a random alphanumeric string of given size. Characters will be used from\na set of Latin alphabetic characters (a-z, A-Z) and the digits 0-9. No special chars.   "),(0,l.kt)("h4",{id:"returns-109"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The random string.  "),(0,l.kt)("h4",{id:"parameters-93"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The length of the random string.")))),(0,l.kt)("h4",{id:"example-109"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.random(size)  \n")),(0,l.kt)("h3",{id:"uuid"},"uuid()"),(0,l.kt)("p",null,"Creates a new uuid with 32 digits and returns it as hexadecimal string.\nFor example: 66a637cc-19fc-4145-98c5-1a1b0bf010be\nSee RFC for specification: ",(0,l.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc4122"},"https://datatracker.ietf.org/doc/html/rfc4122"),"   "),(0,l.kt)("h4",{id:"returns-110"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The new random uuid.  "),(0,l.kt)("h4",{id:"example-110"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.uuid()  \n")),(0,l.kt)("h3",{id:"tohtmltext"},"toHtml(text)"),(0,l.kt)("p",null,"Converts the given text to an HTML fragment. Replaces &, gt and lt signs, keeps line breaks\nand converts links to href elements.   "),(0,l.kt)("h4",{id:"returns-111"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The HTML result.  "),(0,l.kt)("h4",{id:"parameters-94"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to convert to HTML.")))),(0,l.kt)("h4",{id:"example-111"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.toHtml(text)  \n")),(0,l.kt)("h3",{id:"appendbasetexttext"},"append(basetext,text)"),(0,l.kt)("p",null,'Appends the given text to the given base text.\nIf one of the parts is null or empty, returns the other part only, without "null" concatenation.   '),(0,l.kt)("h4",{id:"returns-112"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - basetext + text  "),(0,l.kt)("h4",{id:"parameters-95"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"basetext"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The base text to append to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to append.")))),(0,l.kt)("h4",{id:"example-112"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.append(basetext,text)  \n")),(0,l.kt)("h3",{id:"concatseparatorcollection"},"concat(separator,collection)"),(0,l.kt)("p",null,"Concatenates the given list of objects using the given separator.\nIgnores null items.   "),(0,l.kt)("h4",{id:"returns-113"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The concatenated items as a string.  "),(0,l.kt)("h4",{id:"parameters-96"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collection"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The collection of items to concat.")))),(0,l.kt)("h4",{id:"example-113"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.concat(separator,collection)  \n")),(0,l.kt)("h3",{id:"concatseparatoritems"},"concat(separator,items)"),(0,l.kt)("p",null,"Treats the given items as a list of texts and concats these items using the given separator.\nIgnores null items.   "),(0,l.kt)("h4",{id:"returns-114"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The concatenated items as a string.  "),(0,l.kt)("h4",{id:"parameters-97"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator between the items.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"items"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The collection of items.")))),(0,l.kt)("h4",{id:"example-114"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.concat(separator,items)  \n")),(0,l.kt)("h3",{id:"commajoincollection"},"commajoin(collection)"),(0,l.kt)("p",null,"Same as #concat(separator, items) but with comma as default separator.   "),(0,l.kt)("h4",{id:"returns-115"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The comma separated string of concatenated items.  "),(0,l.kt)("h4",{id:"parameters-98"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collection"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The collection of items to concatenate.")))),(0,l.kt)("h4",{id:"example-115"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.commajoin(collection)  \n")),(0,l.kt)("h3",{id:"concatandformatseparatorcollectionpel"},"concatAndFormat(separator,collection,pel)"),(0,l.kt)("p",null,"Similar to #concat(text1, Object...) but additionally applies the given PEL expression on\neach list entry before it gets concatenated. This is useful for example to convert each entry in\nthe list before adding it to the resulting string. For example to remove whitespaces on each entry.   "),(0,l.kt)("h4",{id:"returns-116"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The concatenated string.  "),(0,l.kt)("h4",{id:"parameters-99"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The separator.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"collection"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The collection of items to concatenate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pel"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The pipeline expression without wrapping #{ and }")))),(0,l.kt)("h4",{id:"example-116"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.concatAndFormat(separator,collection,pel)  \n")),(0,l.kt)("h3",{id:"startswithtextprefix"},"startsWith(text,prefix)"),(0,l.kt)("p",null,"Tests the given text whether it starts with given prefix.   "),(0,l.kt)("h4",{id:"returns-117"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true if given text starts with the second parameter provided  "),(0,l.kt)("h4",{id:"parameters-100"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The text")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prefix"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The prefix to test")))),(0,l.kt)("h4",{id:"example-117"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.startsWith(text,prefix)  \n")),(0,l.kt)("h3",{id:"replacealltextneedlereplacement"},"replaceAll(text,needle,replacement)"),(0,l.kt)("p",null,"Replace all occurrences of a needle text with replacement text.   "),(0,l.kt)("h4",{id:"returns-118"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The text with replacements applied.  "),(0,l.kt)("h4",{id:"parameters-101"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to apply replacements.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"needle"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The needle text matching all replacement sources.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"replacement"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The string to be substituted for each match.")))),(0,l.kt)("h4",{id:"example-118"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.replaceAll(text,needle,replacement)  \n")),(0,l.kt)("h3",{id:"substringtextbeginindex"},"substring(text,beginIndex)"),(0,l.kt)("p",null,"Returns a substring from the given text,\nstarting at beginIndex up to the end of the text.   "),(0,l.kt)("h4",{id:"returns-119"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The substring from given text, null in case text is null or empty string in\ncase text contains no such substring range.  "),(0,l.kt)("h4",{id:"parameters-102"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to return substring from.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"beginIndex"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The 0-based index to start the substring (inclusive).")))),(0,l.kt)("h4",{id:"example-119"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.substring(text,beginIndex)  \n")),(0,l.kt)("h3",{id:"substringtextbeginindexendindex"},"substring(text,beginIndex,endIndex)"),(0,l.kt)("p",null,"Returns a substring from the given text,\nstarting at beginIndex up to endIndex.   "),(0,l.kt)("h4",{id:"returns-120"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The substring from given text or empty string in case text contains no such substring range.  "),(0,l.kt)("h4",{id:"parameters-103"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to return substring from.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"beginIndex"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The 0-based index to start the substring (inclusive).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"endIndex"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"The 0-based index to end the substring (exclusive).")))),(0,l.kt)("h4",{id:"example-120"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.substring(text,beginIndex,endIndex)  \n")),(0,l.kt)("h3",{id:"trimtext"},"trim(text)"),(0,l.kt)("p",null,"Removes any leading and ending whitespaces.   "),(0,l.kt)("h4",{id:"returns-121"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The text with leading and ending whitespaces removed.\nIf input text was null, null is returned here.  "),(0,l.kt)("h4",{id:"parameters-104"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to remove any whitespaces from.")))),(0,l.kt)("h4",{id:"example-121"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.trim(text)  \n")),(0,l.kt)("h3",{id:"isallemptytext"},"isAllEmpty(text)"),(0,l.kt)("p",null,"Returns true, if all of the given string values is empty: Is null, contains no characters or whitespaces only.\nIf at least one of it is not empty, returns false.   "),(0,l.kt)("h4",{id:"returns-122"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - True, if all are empty.  "),(0,l.kt)("h4",{id:"parameters-105"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The list of text items to check.")))),(0,l.kt)("h4",{id:"example-122"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.isAllEmpty(text)  \n")),(0,l.kt)("h3",{id:"toalphanumerictext"},"toAlphaNumeric(text)"),(0,l.kt)("p",null,"Converts the given text string into a string which contains only the\nchars 0-9,a-z,A-Z and ",(0,l.kt)("em",{parentName:"p"},". The conversion rule is:\nUmlauts will become their non-umlaut representation. For example \xe4\nbecomes ae.\nAny other special characters become underscore. For example ? becomes\n"),".   "),(0,l.kt)("h4",{id:"returns-123"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The converted text or null in case input was null.  "),(0,l.kt)("h4",{id:"parameters-106"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to convert.")))),(0,l.kt)("h4",{id:"example-123"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.toAlphaNumeric(text)  \n")),(0,l.kt)("h3",{id:"firstcharuppertext"},"firstCharUpper(text)"),(0,l.kt)("p",null,"Makes the first char of the given text to upper case.   "),(0,l.kt)("h4",{id:"returns-124"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The text with first char to upper case or null in case input was null.  "),(0,l.kt)("h4",{id:"parameters-107"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to change.")))),(0,l.kt)("h4",{id:"example-124"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.firstCharUpper(text)  \n")),(0,l.kt)("h3",{id:"firstcharlowertext"},"firstCharLower(text)"),(0,l.kt)("p",null,"Makes the first char of the given text to lower case.   "),(0,l.kt)("h4",{id:"returns-125"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The text with first char to lower case or null in case input was null.  "),(0,l.kt)("h4",{id:"parameters-108"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to change.")))),(0,l.kt)("h4",{id:"example-125"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.firstCharLower(text)  \n")),(0,l.kt)("h3",{id:"splittexttoken"},"split(text,token)"),(0,l.kt)("p",null,"Splits the given text into a list of items by given split token.   "),(0,l.kt)("h4",{id:"returns-126"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list<string>")," - A list of split items or empty list in case input text or input token is null or empty.  "),(0,l.kt)("h4",{id:"parameters-109"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The text to split to tokens.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The token to split the text with.")))),(0,l.kt)("h4",{id:"example-126"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.split(text,token)  \n")),(0,l.kt)("h3",{id:"matchestextregexp"},"matches(text,regexp)"),(0,l.kt)("p",null,"Searches text for first regexp match.   "),(0,l.kt)("h4",{id:"returns-127"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list<string>")," - On success, list with at least one item is returned. At index 0 the whole matched string is placed, and\nthen from index 1, all regexp capturing groups are listed.\nAn empty list is returned when no match.  "),(0,l.kt)("h4",{id:"parameters-110"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"to search for matches")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"regexp"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"regular expression to use")))),(0,l.kt)("h4",{id:"example-127"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@text.matches(text,regexp)  \n")),(0,l.kt)("h2",{id:"uri"},(0,l.kt)("inlineCode",{parentName:"h2"},"@uri")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple uri resolving.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@uri"),"  "),(0,l.kt)("h3",{id:"resolveuri"},"resolve(uri)"),(0,l.kt)("p",null,"Resolves the given uri to its object representation. Supported uri schemes:"),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"uri:user:"),"Resolves to an user object."),(0,l.kt)("li",null,(0,l.kt)("code",null,"uri:pipeline:"),"Resolves the given path, pointing to a persisted pipeline, executes it and returns the body result."),(0,l.kt)("li",null,(0,l.kt)("code",null,"uri:property:")," Resolves the given property key path and returns it from the storage.")),(0,l.kt)("h4",{id:"returns-128"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"object")," - The object representation of the uri.  "),(0,l.kt)("h4",{id:"parameters-111"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uri"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The uri to be resolved.")))),(0,l.kt)("h4",{id:"example-128"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@uri.resolve(uri)  \n")),(0,l.kt)("h2",{id:"user"},(0,l.kt)("inlineCode",{parentName:"h2"},"@user")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides utility functions inside a pipeline expression for simple handling of the currently logged-in user.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@user"),"  "),(0,l.kt)("h3",{id:"username"},"username()"),(0,l.kt)("p",null,"Returns the username of the currently logged-in user.   "),(0,l.kt)("h4",{id:"returns-129"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The username of the user.  "),(0,l.kt)("h4",{id:"example-129"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.username()  \n")),(0,l.kt)("h3",{id:"uuid-1"},"uuid()"),(0,l.kt)("p",null,"Returns the uuid of the logged-in user.   "),(0,l.kt)("h4",{id:"returns-130"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The uuid of the user.  "),(0,l.kt)("h4",{id:"example-130"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.uuid()  \n")),(0,l.kt)("h3",{id:"haspermissionpermissionkeys"},"hasPermission(permissionKeys)"),(0,l.kt)("p",null,"Returns true in case the logged-in user has at least one of the listed permission.   "),(0,l.kt)("h4",{id:"returns-131"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true in case the currently logged-in user has the permisson.  "),(0,l.kt)("h4",{id:"parameters-112"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permissionKeys"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"A list of permission keys (roles) to check for.")))),(0,l.kt)("h4",{id:"example-131"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.hasPermission(permissionKeys)  \n")),(0,l.kt)("h3",{id:"displayname"},"displayName()"),(0,l.kt)("p",null,"Returns the default display name of the logged-in user which is the first non-empty value of:\nfirstName lastName, username, email, uuid.   "),(0,l.kt)("h4",{id:"returns-132"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The display name.  "),(0,l.kt)("h4",{id:"example-132"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.displayName()  \n")),(0,l.kt)("h3",{id:"emailanddisplaynameobject"},"emailAndDisplayName(object)"),(0,l.kt)("p",null,"Returns the email and default display name of the given user object or empty string if\nno such value exists.   "),(0,l.kt)("h4",{id:"returns-133"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The email and display name in the format ",(0,l.kt)("a",{parentName:"p",href:"mailto:email@domain.tld"},"email@domain.tld")," (FirstName LastName).  "),(0,l.kt)("h4",{id:"parameters-113"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The user object to extract email and displayName from.")))),(0,l.kt)("h4",{id:"example-133"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.emailAndDisplayName(object)  \n")),(0,l.kt)("h3",{id:"emailanddisplayname"},"emailAndDisplayName()"),(0,l.kt)("p",null,"Returns the email and default display name of the currently logged-in user object or empty string if\nno such value exists.   "),(0,l.kt)("h4",{id:"returns-134"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The email and display name in the format ",(0,l.kt)("a",{parentName:"p",href:"mailto:email@domain.tld"},"email@domain.tld")," (FirstName LastName).  "),(0,l.kt)("h4",{id:"example-134"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.emailAndDisplayName()  \n")),(0,l.kt)("h3",{id:"displaynameobject"},"displayName(object)"),(0,l.kt)("p",null,"Tries to dynamically create a meaningful display name out of the given user object.\nThis user object can be of different format. The method tries to\nautomatically detect it and creates the displayName from it. If this\nwas not possible for some reason, an empty string is returned.   "),(0,l.kt)("h4",{id:"returns-135"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The display name.  "),(0,l.kt)("h4",{id:"parameters-114"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The user object.")))),(0,l.kt)("h4",{id:"example-135"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.displayName(object)  \n")),(0,l.kt)("h3",{id:"email"},"email()"),(0,l.kt)("p",null,"Returns the primary email address of the currently logged-in user.   "),(0,l.kt)("h4",{id:"returns-136"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The email address as string.  "),(0,l.kt)("h4",{id:"example-136"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.email()  \n")),(0,l.kt)("h3",{id:"emailobject"},"email(object)"),(0,l.kt)("p",null,"Tries to detect the email from the given object.   "),(0,l.kt)("h4",{id:"returns-137"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The email address as string.  "),(0,l.kt)("h4",{id:"parameters-115"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"An object like a user or a JSON containing an email property.")))),(0,l.kt)("h4",{id:"example-137"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.email(object)  \n")),(0,l.kt)("h3",{id:"locale"},"locale()"),(0,l.kt)("p",null,"Returns the locale of the logged in user or null in case not set or could not be determined.   "),(0,l.kt)("h4",{id:"returns-138"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The lower case locale (for example: de, en, fr, ...)  "),(0,l.kt)("h4",{id:"example-138"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.locale()  \n")),(0,l.kt)("h3",{id:"firstname"},"firstName()"),(0,l.kt)("p",null,"Returns the first name of the logged in user.   "),(0,l.kt)("h4",{id:"returns-139"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The first name.  "),(0,l.kt)("h4",{id:"example-139"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.firstName()  \n")),(0,l.kt)("h3",{id:"lastname"},"lastName()"),(0,l.kt)("p",null,"Returns the last name of the logged in user   "),(0,l.kt)("h4",{id:"returns-140"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The last name.  "),(0,l.kt)("h4",{id:"example-140"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.lastName()  \n")),(0,l.kt)("h3",{id:"loggedin"},"loggedIn()"),(0,l.kt)("p",null,"Returns true in case the current user is authenticated (logged-in).   "),(0,l.kt)("h4",{id:"returns-141"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," - true, in case authenticated.  "),(0,l.kt)("h4",{id:"example-141"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.loggedIn()  \n")),(0,l.kt)("h3",{id:"zone"},"zone()"),(0,l.kt)("p",null,"Returns the preferred zoneId of the currently logged-in user or null in case none was set.\nThe preferred zone is usually set in the users profile or by the client in use (e.g. the browser).\nSee ","{","@link ZoneId#getAvailableZoneIds()","}"," and here: ",(0,l.kt)("a",{parentName:"p",href:"http://www.iana.org/time-zones"},"http://www.iana.org/time-zones"),"   "),(0,l.kt)("h4",{id:"returns-142"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The zone as string.  "),(0,l.kt)("h4",{id:"example-142"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@user.zone()  \n")),(0,l.kt)("h2",{id:"xml"},(0,l.kt)("inlineCode",{parentName:"h2"},"@xml")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Provides functions inside a pipeline expression in order to read and change XML documents.",(0,l.kt)("br",{parentName:"p"}),"\n","You can access the functions declared here in the PEL using ",(0,l.kt)("code",null,"@xml"),"  "),(0,l.kt)("h3",{id:"xpathdocumentxpath"},"xpath(document,xpath)"),(0,l.kt)("p",null,"Evaluates given XPath expression of given document and returns the result as a list of DOM nodes.   "),(0,l.kt)("h4",{id:"returns-143"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list")," - The result of the applied expression as a list of DOM nodes.  "),(0,l.kt)("h4",{id:"parameters-116"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"document"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The document to be applied. Can be a DOM or an XML string.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"xpath"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The expression to be applied.")))),(0,l.kt)("h4",{id:"example-143"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@xml.xpath(document,xpath)  \n")),(0,l.kt)("h3",{id:"xpathastextdocumentxpath"},"xpathAsText(document,xpath)"),(0,l.kt)("p",null,"Evaluates given XPath expression of given document and returns the result as a text value.   "),(0,l.kt)("h4",{id:"returns-144"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")," - The result of the applied expression as text.  "),(0,l.kt)("h4",{id:"parameters-117"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"document"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"object")),(0,l.kt)("td",{parentName:"tr",align:null},"The document to be applied. Can be a DOM or an XML string.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"xpath"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"The expression to be applied.")))),(0,l.kt)("h4",{id:"example-144"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@xml.xpathAsText(document,xpath)  \n")),(0,l.kt)("h2",{id:"report-an-issue"},"Report an Issue"),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Your help is needed!")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In case you're missing something on this page, you found an error or you have an idea for improvement, please ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/pipeforce/pipeforce.github.io/issues"},"click here to create a new issue"),". Another way to contribute is, to click ",(0,l.kt)("strong",{parentName:"p"},"Edit this page")," below and directly add your changes in GitHub. Many thanks for your contribution in order to improve PIPEFORCE!"))))}u.isMDXComponent=!0},5041:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/workbench-completion-utils-2870ff407fd1920805bae14a1d746a84.png"}}]);