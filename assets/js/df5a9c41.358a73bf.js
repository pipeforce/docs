"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[3172],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>c});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(o),c=a,m=u["".concat(l,".").concat(c)]||u[c]||h[c]||i;return o?n.createElement(m,r(r({ref:t},d),{},{components:o})):n.createElement(m,r({ref:t},d))}));function c(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=o.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=o[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},7007:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=o(7462),a=(o(7294),o(3905));const i={},r="Webhooks",s={unversionedId:"guides/messaging/webhooks",id:"guides/messaging/webhooks",title:"Webhooks",description:"Since Version: 6.0",source:"@site/docs/guides/messaging/40_webhooks.md",sourceDirName:"guides/messaging",slug:"/guides/messaging/webhooks",permalink:"/docs/guides/messaging/webhooks",draft:!1,editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/guides/messaging/40_webhooks.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Emailing",permalink:"/docs/guides/messaging/email"},next:{title:"10. Jobs",permalink:"/docs/guides/jobs"}},l={},p=[{value:"Create a Webhook",id:"create-a-webhook",level:2},{value:"Trigger a Webhook",id:"trigger-a-webhook",level:2},{value:"Link a Webhook to a Pipeline",id:"link-a-webhook-to-a-pipeline",level:2},{value:"Show existing Webhooks",id:"show-existing-webhooks",level:2},{value:"Edit a Webhook",id:"edit-a-webhook",level:2},{value:"Delete a Webhook",id:"delete-a-webhook",level:2},{value:"Receiving Files via Webhook",id:"receiving-files-via-webhook",level:2},{value:"Report an Issue",id:"report-an-issue",level:2}],d={toc:p};function h(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"webhooks"},"Webhooks"),(0,a.kt)("p",{class:"theme-doc-version-badge badge badge--secondary"},"Since Version: 6.0"),(0,a.kt)("p",null,"A webhook is a unique url pointing to PIPEFORCE which can be called by an external system. In case the external system calls the webhook url, this can trigger any custom action inside PIPEFORCE."),(0,a.kt)("p",null," The url of such an webhook, which gets called by the external system, has a format similar to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://hub-<your-domain>/api/v3/command/webhook.receive?token=<token>\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Replace ",(0,a.kt)("inlineCode",{parentName:"li"},"<token>")," by the token of your webhook. See below to get such an token."),(0,a.kt)("li",{parentName:"ul"},"The token is sometimes also referred to as the ",(0,a.kt)("strong",{parentName:"li"},"uuid"),", the unique id, of a webhook. "),(0,a.kt)("li",{parentName:"ul"},"It's also possible to place the ",(0,a.kt)("inlineCode",{parentName:"li"},"token")," param as request header instead (recommended, because it is more secure)."))),(0,a.kt)("p",null,"You can create multiple ",(0,a.kt)("strong",{parentName:"p"},"custom")," webhooks and urls. When called, it produces an internal message, pipelines can listen to using ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#eventlisten-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"event.listen"))," or ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#messagereceive-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"message.receive")),". This way you can connect a webhook to multiple pipelines:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(6084).Z,width:"1333",height:"749"})),(0,a.kt)("h2",{id:"create-a-webhook"},"Create a Webhook"),(0,a.kt)("p",null,"Before some external service can call your webhook, you have to create and endpoint for it. You can create such a webhook using the command ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#webhookput-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"webhook.put")),". Here is an example using it in a pipeline:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n  - webhook.put:\n      eventKey: "webhook.lead.created"\n')),(0,a.kt)("p",null,"Or you can use the CLI to create the Webhook:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pi command webhook.put eventKey=webhook.lead.created\n")),(0,a.kt)("p",null,"The possible parameters to create a webhook are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"eventKey")," = The key, the pipelines will listen to (required)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"payloadHandling")," = What to do with the payload, before it is send to the messaging queues. Possible values are:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"raw")," = The payload will be send without any conversion."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"base64")," = The payload will be encoded to base64 (default)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ignore")," = No payload will be send with the webhook message even if specified in the request.")))),(0,a.kt)("p",null,"As ",(0,a.kt)("inlineCode",{parentName:"p"},"eventKey")," define the internal unique name of the webhook. It's good practise that this name is lower case, grouped by periods and starts with prefix ",(0,a.kt)("inlineCode",{parentName:"p"},"webhook."),". The result after executing the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#webhookput-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"webhook.put"))," command is a JSON document like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "eventKey": "webhook.lead.created",\n  "webhookUrl": "https://hub-try.pipeforce.org/api/v3/webhook.receive?token=a29a4f16-989d-48c8-ab54-7b6150733ba1",\n  "uuid": "a29a4f16-989d-48c8-ab54-7b6150733ba1",\n  "payloadHandling": "base64"\n  ...\n}\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"uuid")," (also called ",(0,a.kt)("strong",{parentName:"p"},"token"),") is the unique identifier of your webhook. Since it is very hard to guess this token, it is used to secure your webhook. The external services can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"webhookUrl")," in order to call your webhook."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Make sure you keep the ",(0,a.kt)("inlineCode",{parentName:"li"},"uuid")," (token) secure and only communicate it to the external partners via a secure channel."),(0,a.kt)("li",{parentName:"ul"},"Once created, ",(0,a.kt)("strong",{parentName:"li"},"the uuid cannot be changed afterwards")," since it is the link of external services to your internal actions."))),(0,a.kt)("p",null,"In case you're using the PIPEFORCE Developer Portal, you can create a Webhook with a few clicks:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(893).Z,width:"1112",height:"797"})),(0,a.kt)("p",null,'Define an event key in the creation dialog and click "Add":'),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(8725).Z,width:"1110",height:"791"})),(0,a.kt)("p",null,"Finally, the Webhook gets listed and you can get its token from the list:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(1643).Z,width:"1107",height:"797"})),(0,a.kt)("h2",{id:"trigger-a-webhook"},"Trigger a Webhook"),(0,a.kt)("p",null,"After you have setup the Webhook successfully, it can be triggered (called) from the outside. To do so, send a GET or POST HTTP request to the webhook url which was returned when you created it:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"https://hub-try.pipeforce.org/api/v3/command/webhook.receive?token=abcdef")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"In order to secure the ",(0,a.kt)("strong",{parentName:"p"},"token")," in your url, you should always prefer a ",(0,a.kt)("strong",{parentName:"p"},"HTTPS")," connection between the two systems (which is by default always the case in PIPEFORCE), and send the ",(0,a.kt)("inlineCode",{parentName:"p"},"token")," parameter in the body of a ",(0,a.kt)("strong",{parentName:"p"},"POST")," request, or as ",(0,a.kt)("strong",{parentName:"p"},"HTTP Header")," instead of a request parameter. PIPEFORCE supports all three methods. But it depends on the caller of the webhook, which approach it supports.")),(0,a.kt)("h2",{id:"link-a-webhook-to-a-pipeline"},"Link a Webhook to a Pipeline"),(0,a.kt)("p",null,"After you have successfully setup the webhook, any time the webhook url is triggered (called) from the outside, a new message is produced inside PIPEFORCE, which can then be consumed by any pipeline. To do so, use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#eventlisten-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"event.listen"))," or ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#messagereceive-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"message.receive"))," command to listen for such new event messages. Here\u2019s an example which sends an email whenever a new lead was created using a webhook with the ",(0,a.kt)("inlineCode",{parentName:"p"},"eventKey")," =",(0,a.kt)("inlineCode",{parentName:"p"},"webhook.lead.created"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n - event.listen:\n     eventKey: webhook.lead.created\n - mail:\n     to: name@company.tld\n     subject: "New lead was created!"\n     body: "#{@convert.fromBase64(body.origin)}"\n')),(0,a.kt)("p",null,"The input body of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#eventlisten-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"event.listen"))," command is the payload of the event message submitted from the outside caller."),(0,a.kt)("p",null,"In case the sender has sent some payload in the body of the webhook request, this payload is made available for you by default as base64 encoded string in the ",(0,a.kt)("inlineCode",{parentName:"p"},"origin")," field of the event. To access this data, you have to convert this value as shown in this example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#{@convert.fromBase64(body.origin)}\n")),(0,a.kt)("p",null,"In case the payload is a serializable format like a string or a JSON document for example, you can set ",(0,a.kt)("inlineCode",{parentName:"p"},"payloadHandling")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"raw")," for the webhook. In this case, it is not needed to convert the payload from base64, so you can use it directly:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n - event.listen:\n     eventKey: webhook.lead.created\n - mail:\n     to: name@company.tld\n     subject: "New lead was created!"\n     body: "#{body.origin}"\n')),(0,a.kt)("p",null,"For security reasons, by default, the webhook pipeline is executed with very limited ",(0,a.kt)("inlineCode",{parentName:"p"},"anonymousUser")," privileges. So, make sure that you use only commands in your pipeline which can be executed by this user. In case you need more privileges, you can use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#iamrunas-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"iam.run.as"))," command to switch to the privileges of the given user before executing the command. See the IAM portal for the permissions (or roles) of a given user. Also see ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/security/permissions"},"Groups, Roles, and Permissions")," for more details on user privileges / permissions."),(0,a.kt)("admonition",{title:"Some words about security and webhooks",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Since a Webhook triggers the execution of pipelines, they can be very powerful. This power also comes with ",(0,a.kt)("strong",{parentName:"p"},"additional responsibility")," for you, the app developer. Make sure you have sufficient security testings in place, and you have secured your webhook pipelines accordingly.")),(0,a.kt)("h2",{id:"show-existing-webhooks"},"Show existing Webhooks"),(0,a.kt)("p",null,"To list all existing webhooks, you can use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#webhookget-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"webhook.get"))," command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pi command webhook.get\n")),(0,a.kt)("p",null,"You will see a JSON / YAML list with details about all existing webhooks."),(0,a.kt)("p",null,"In order to get the details of a single webhook, use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#webhookget-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"webhook.get"))," with the param ",(0,a.kt)("inlineCode",{parentName:"p"},"uuid"),", where uuid is the token of the webhook you want to list:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pi command webhook.get uuid=<yourWebhookUuid>\n")),(0,a.kt)("p",null,"You can also list all existing Webhooks in the Portal:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:o(1643).Z,width:"1107",height:"797"})),(0,a.kt)("h2",{id:"edit-a-webhook"},"Edit a Webhook"),(0,a.kt)("p",null,"In order to edit an existing webhook, you can use the ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#webhookput-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"webhook.put"))," command, and set the uuid (= token) of the webhook to edit. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pi command webhook.put uuid=abcdef eventKey=webhook.changed.key\n")),(0,a.kt)("h2",{id:"delete-a-webhook"},"Delete a Webhook"),(0,a.kt)("p",null,"In order to delete an existing webhook, you can use the command ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/commands#webhookdelete-v1"},(0,a.kt)("inlineCode",{parentName:"a"},"webhook.delete")),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"pi command webhook.delete uuid=abcdef\n")),(0,a.kt)("p",null,"And then, set the uuid of the webhook you want to delete."),(0,a.kt)("p",null,'You can also delete a Webhook by using the Portal in the "Webhooks" section.'),(0,a.kt)("h2",{id:"receiving-files-via-webhook"},"Receiving Files via Webhook"),(0,a.kt)("p",null,"It is also possible to send files as a playload with a webhook. To do so, execute the request as multipart POST with the body formatted as ",(0,a.kt)("inlineCode",{parentName:"p"},"multipart/form-data"),". For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'POST /api/v3/command/webhook.receive HTTP/1.1 \ntoken: abcdefgh\nHost: hub-<your-domain>\nContent-Type: multipart/form-data;boundary="boundary" \n\n--boundary \nContent-Disposition: form-data; name="file"; filename="fileA.pdf" \n\n<CONTENT FILE fileA.pdf GOES HERE...>\n--boundary \nContent-Disposition: form-data; name="file"; filename="fileB.pdf" \n\n<CONTENT FILE fileB.pdf GOES HERE...>\n--boundary--\n')),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"The overall length of a webhook payload is limited to 500KB!")),(0,a.kt)("p",null,"More information about multipart POST requests can be found here: ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST"},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST")),(0,a.kt)("h2",{id:"report-an-issue"},"Report an Issue"),(0,a.kt)("admonition",{title:"Your help is needed!",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"In case you're missing something on this page, you found an error or you have an idea for improvement, please ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pipeforce/pipeforce.github.io/issues/new"},"click here to create a new issue"),". Another way to contribute is, to click ",(0,a.kt)("strong",{parentName:"p"},"Edit this page")," below and directly add your changes in GitHub. Many thanks for your contribution in order to improve PIPEFORCE!")))}h.isMDXComponent=!0},8725:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/portal-webhook-create-dialog-edd3b923a990e3ff0a2e58961fc9181f.png"},893:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/portal-webhook-create-6ad6cd0eac9eb415f986b4c7b211cb62.png"},1643:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/portal-webhook-listing-0162ed766d0b1ec4c4f603557df6a846.png"},6084:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/webhook-queues-6f62e5f210b975f4a9fd0320d69f7c2d.jpg"}}]);