"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[2136],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>u});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var r=n.createContext({}),s=function(e){var a=n.useContext(r),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=s(e.components);return n.createElement(r.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,r=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=s(t),u=l,h=m["".concat(r,".").concat(u)]||m[u]||c[u]||i;return t?n.createElement(h,o(o({ref:a},d),{},{components:t})):n.createElement(h,o({ref:a},d))}));function u(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,o=new Array(i);o[0]=m;var p={};for(var r in a)hasOwnProperty.call(a,r)&&(p[r]=a[r]);p.originalType=e,p.mdxType="string"==typeof e?e:l,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5766:(e,a,t)=>{t.r(a),t.d(a,{contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>r});var n=t(7462),l=(t(7294),t(3905));const i={title:"15. Command Line Interface",slug:"/cli"},o=void 0,p={unversionedId:"guides/cli",id:"guides/cli",isDocsHomePage:!1,title:"15. Command Line Interface",description:"The Command Line Interface (short \u201cCLI\u201d or \u201cpi tool\u201d) is a local command-line tool, which allows remote control and development of PIPEFORCE from your local terminal.",source:"@site/docs/guides/150_cli.md",sourceDirName:"guides",slug:"/cli",permalink:"/docs/cli",editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/guides/150_cli.md",tags:[],version:"current",sidebarPosition:150,frontMatter:{title:"15. Command Line Interface",slug:"/cli"},sidebar:"tutorialSidebar",previous:{title:"Microservice Messaging",permalink:"/docs/guides/microservices/messaging"},next:{title:"Tutorial 1: Basics",permalink:"/docs/tutorials/basics"}},r=[{value:"Usage",id:"usage",children:[{value:"<code>pi command</code>",id:"pi-command",children:[],level:3},{value:"<code>pi delete</code>",id:"pi-delete",children:[],level:3},{value:"<code>pi get</code>",id:"pi-get",children:[],level:3},{value:"<code>pi help</code>",id:"pi-help",children:[],level:3},{value:"<code>pi list</code>",id:"pi-list",children:[],level:3},{value:"<code>pi new</code>",id:"pi-new",children:[],level:3},{value:"<code>pi pipeline</code>",id:"pi-pipeline",children:[],level:3},{value:"<code>pi publish</code>",id:"pi-publish",children:[],level:3},{value:"<code>pi setup</code>",id:"pi-setup",children:[],level:3},{value:"<code>pi status</code>",id:"pi-status",children:[],level:3},{value:"<code>pi sync</code>",id:"pi-sync",children:[],level:3},{value:"<code>pi update</code>",id:"pi-update",children:[],level:3}],level:2},{value:"Kubernetes Commands",id:"kubernetes-commands",children:[{value:"<code>pi kdownload</code>",id:"pi-kdownload",children:[],level:3},{value:"<code>pi kexec</code>",id:"pi-kexec",children:[],level:3},{value:"<code>pi kpodname</code>",id:"pi-kpodname",children:[],level:3},{value:"<code>pi ksync</code>",id:"pi-ksync",children:[],level:3},{value:"<code>pi kupload</code>",id:"pi-kupload",children:[],level:3}],level:2},{value:"Local Development",id:"local-development",children:[{value:"Prerequisites",id:"prerequisites",children:[],level:3},{value:"Create a new workspace",id:"create-a-new-workspace",children:[],level:3},{value:"Using Visual Studio Code",id:"using-visual-studio-code",children:[{value:"Download and Installation",id:"download-and-installation",children:[],level:4},{value:"Loading the workspace in VS Code",id:"loading-the-workspace-in-vs-code",children:[],level:4},{value:"Show the terminal",id:"show-the-terminal",children:[],level:4},{value:"Create a new resource",id:"create-a-new-resource",children:[],level:4},{value:"Execute a pipeline in the terminal",id:"execute-a-pipeline-in-the-terminal",children:[],level:4}],level:3},{value:"Enable code completion for pipelines",id:"enable-code-completion-for-pipelines",children:[],level:3},{value:"Publish a resource",id:"publish-a-resource",children:[],level:3}],level:2},{value:"Report an Issue",id:"report-an-issue",children:[],level:2}],s={toc:r};function d(e){let{components:a,...i}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,i,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",{parentName:"p"},"Command Line Interface")," (short \u201cCLI\u201d or \u201cpi tool\u201d) is a local command-line tool, which allows remote control and development of PIPEFORCE from your local terminal."),(0,l.kt)("p",null,"It makes it handy to automate local tasks by executing commands and pipelines."),(0,l.kt)("p",null,"See the ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("a",{parentName:"em",href:"/docs/downloads"},"Downloads"))," section on how to install this tool."),(0,l.kt)("p",null,"The tutorial ",(0,l.kt)("a",{parentName:"p",href:"../docs/tutorials/localworkspace"},"Setup local workspace + CLI")," shows, how to install and work with the CLI."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"The main structure of a CLI command is always like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi <action> <args>\n")),(0,l.kt)("p",null,"To get a list of all supported actions and their parameters, use the help command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi help\n")),(0,l.kt)("p",null,"Below, you can find the description of the most important actions."),(0,l.kt)("h3",{id:"pi-command"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi command")),(0,l.kt)("p",null,"This executes a single pipeline command at the server-side and returns the result."),(0,l.kt)("p",null,"Each parameter will become a command-line parameter."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi command log message=HELLO\n")),(0,l.kt)("p",null,"This executes the ",(0,l.kt)("inlineCode",{parentName:"p"},"log")," command at server-side with the parameter ",(0,l.kt)("inlineCode",{parentName:"p"},"message")," set to ",(0,l.kt)("inlineCode",{parentName:"p"},"HELLO"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pi command mail.send to=my@email.tld subject=Hello message="This is a test"\n')),(0,l.kt)("p",null,"This command sends an email."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note")),(0,l.kt)("p",null,"Use the command ",(0,l.kt)("inlineCode",{parentName:"p"},"pi help command")," to get the documentation of all available commands activated in your license."),(0,l.kt)("p",null,"Or use the command ",(0,l.kt)("inlineCode",{parentName:"p"},"pi help command COMMAND_NAME")," to get the documentation for a specific command."),(0,l.kt)("h3",{id:"pi-delete"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi delete")),(0,l.kt)("p",null,"This deletes the remote resources inside a given app. It doesn\u2019t delete any local resource."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi delete global/app/myapp/pipeline/helloworld\n")),(0,l.kt)("p",null,"This deletes the pipeline helloworld."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi delete global/app/myapp/**\n")),(0,l.kt)("p",null,"This deletes all resources of the app ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp"),"."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This command deletes remote resources without the option to recover. So, be careful in using it!"))),(0,l.kt)("h3",{id:"pi-get"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi get")),(0,l.kt)("p",null,"This downloads all resources of a given app, stores them into the local workspace in order to be able to edit them. If a local resource already exists, this asks for either to overwrite or to skip."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi get global/app/myapp/**\n")),(0,l.kt)("p",null,"This command-line call downloads all resources of the app ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," and its sub-folders, and stores them into the local workspace folder ",(0,l.kt)("inlineCode",{parentName:"p"},"src/global/app/myapp"),". Note, that you have to define the property key here, not the local file path."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("p",null,"This downloads only the resources inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," folder, but no resource from inside its sub-folders."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi get global/app/myapp/*\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 3:")),(0,l.kt)("p",null,"This downloads a single resource by its key:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi get global/app/myapp/pipeline/hello\n")),(0,l.kt)("h3",{id:"pi-help"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi help")),(0,l.kt)("p",null,"Thid lists all available CLI options or pipeline commands."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi help\n")),(0,l.kt)("p",null,"This lists all available command-line options."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi help command\n")),(0,l.kt)("p",null,"This lists the documentation of all available pipeline commands for the currently logged-in user."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi help command log\n")),(0,l.kt)("p",null,"This explains the log pipeline command. The output could look like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'log:\n  type: "object"\n  description: "Logs the given input message without changing it. Sets the log message\\\n    \\ in the body in case body is empty. Doesn\'t overwrite any existing content in\\\n    \\ the body."\n  inputType: "JsonNode"\n  outputType: "JsonNode"\n  properties:\n    message:\n      type: "number"\n      description: "The message to log. Can be a string or a pipe expression. If null\\\n        \\ or empty, the full pipe message will be logged."\n      default: null\n    level:\n      type: "string"\n      description: "The log level. Can be one of DEBUG, TRACE, INFO, WARN, ERROR.\\\n        \\ If null or empty, INFO will be used."\n      default: "INFO"\n  required:\n  - "message"\n')),(0,l.kt)("h3",{id:"pi-list"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi list")),(0,l.kt)("p",null,"This lists all remote resources of a given path."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi list global/app/myapp**\n")),(0,l.kt)("p",null,"This lists all resources of the app ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," recursively."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi list global/app/myapp/*\n")),(0,l.kt)("p",null,"This lists all resources of the folder ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp"),", but not the resources inside any sub-folder."),(0,l.kt)("h3",{id:"pi-new"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi new")),(0,l.kt)("p",null,"This creates a new resource based on a wizard."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi new\n")),(0,l.kt)("p",null,"This would print this wizard:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Create new...\n  0: app\n  1: form\n  2: list\n  3: object\n  4: pipeline\n  5: workflow\nChoose number : \n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("p",null,"You can also directly start the resource wizard by the command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi new app\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 3:")),(0,l.kt)("p",null,"And if you are inside a app folder, the app you want to create the resource for, is already pre-selected for you."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"~ pipeforce> cd src/global/app/myapp\n~ app/myapp> pi new pipeline\n")),(0,l.kt)("h3",{id:"pi-pipeline"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi pipeline")),(0,l.kt)("p",null,"This executes a a locally stored pipeline file, a remote pipeline or a pipeline uri. Which type of pipeline is detected by the pipeline argument:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Starts with ",(0,l.kt)("inlineCode",{parentName:"li"},"src/"),": It's assumed to be a local pipeline file."),(0,l.kt)("li",{parentName:"ul"},"Starts with ",(0,l.kt)("inlineCode",{parentName:"li"},"global/"),": It's assumed to be a persisted remote pipeline."),(0,l.kt)("li",{parentName:"ul"},"None of the above: It's assumed to be a pipeline uri.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi pipeline src/global/app/myapp/pipeline/helloworld.pi.yaml\n")),(0,l.kt)("p",null,"This example uploads the content of the ",(0,l.kt)("inlineCode",{parentName:"p"},"helloworld.pi.yaml")," to the server, executes it there, and returns the result. It doesn't store the pipeline at server-side."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi pipeline global/app/myapp/pipeline/helloworld.pi.yaml\n")),(0,l.kt)("p",null,"This example executes a persisted pipeline stored at the key path ",(0,l.kt)("inlineCode",{parentName:"p"},"global/app/myapp/pipeline/helloworld.pi.yaml"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 3:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pi pipeline "log?message=HELLO"\n')),(0,l.kt)("p",null,"This example takes the given pipeline uri and executes it at server side."),(0,l.kt)("p",null,"The syntax of a pipeline uri looks like this:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<command>[?<arg1>=<value1>&<arg2>=<value2>"),"]"),(0,l.kt)("p",null,"It is also possible to combine multiple commands to form a pipeline using the pipe ",(0,l.kt)("inlineCode",{parentName:"p"},"|"),"\xa0character:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<commandA>?<arg1>=<value1>&<arg2>=<value2>|<commandB>?<arg1>=<value1>&<arg2>=<value2>")),(0,l.kt)("p",null,"Here is an example to re-write this YAML pipeline configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'pipeline:\n  - datetime:\n      format: "dd.MM.YY"\n  - log:\n')),(0,l.kt)("p",null,"To this pipeline uri format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"datetime?format=dd.MM.YY|log\n")),(0,l.kt)("p",null,"Therefore, a call of this pipeline uri would look like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pi pipeline "datetime?format=dd.MM.YY|log"\n')),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"23.01.21\n")),(0,l.kt)("p",null,"The idea of a pipeline uri is to adhoc execute commands without the need to create a pipeline file and/or upload it."),(0,l.kt)("p",null,"Also, see the CLI command ",(0,l.kt)("inlineCode",{parentName:"p"},"pi help command"),", which lists all available pipeline commands and their description you can use to build pipelines and pipeline uris."),(0,l.kt)("h3",{id:"pi-publish"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi publish")),(0,l.kt)("p",null,"This uploads your created or changed resources like pipeline or form configurations to the server."),(0,l.kt)("p",null,"In case a resource already exists at the server, this updates only if it has changed since last upload."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish\n")),(0,l.kt)("p",null,"This command uploads / updates all resources inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"src")," folder."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("p",null,"If you want to publish only a certain subset of the src folder, you can specify the folder like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish src/global/app/myapp/**\n")),(0,l.kt)("p",null,"This will recursively publish any resource inside this folder and its sub-folders."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 3:")),(0,l.kt)("p",null,"In case you want to publish only the files inside this folder, but not its sub-folders and files, you can use a single asterisk instead:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish src/global/app/myapp/*\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 4:")),(0,l.kt)("p",null,"If you want to publish a single resource, define it by its filename:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish src/global/app/myapp/pipeline/hello.pi.yaml\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 5:")),(0,l.kt)("p",null,"Note, that the path argument is always relatively to your current working dir, as long as you are inside the workspace home folder $USER","_","HOME/pipeforce:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd $USER_HOME/pipeforce/src/global/app/myapp\npi publish **\n")),(0,l.kt)("p",null,"This will publish all resources inside ",(0,l.kt)("inlineCode",{parentName:"p"},"src/gobal/app/myapp")," recursively."),(0,l.kt)("p",null,"For security reasons (for example, to not accidentally publish a huge path structure of your file system to the server), publish is only possible in case your current working dir is inside the workspace folder."),(0,l.kt)("h3",{id:"pi-setup"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi setup")),(0,l.kt)("p",null,"This changes the settings of the CLI tool using a wizard and/or installs the CLI if not already done."),(0,l.kt)("p",null,"This writes the final result into the file ",(0,l.kt)("inlineCode",{parentName:"p"},"$USER_HOME/pipeforce/conf/cli.conf.json"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi setup\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("p",null,"For more advanced users, you can use the advanced flag in order to be able to adjust more settings:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi setup advanced\n")),(0,l.kt)("h3",{id:"pi-status"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi status")),(0,l.kt)("p",null,"This returns status information about the CLI."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi status\n")),(0,l.kt)("h3",{id:"pi-sync"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi sync")),(0,l.kt)("p",null,"This does a one-way-sync of files inside the local ",(0,l.kt)("inlineCode",{parentName:"p"},"src")," folder to the server. It watches a given folder, and immediately syncs changes of files inside this folder to the server."),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The folder to sync must be located inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"src")," folder of your workspace."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi sync src/global/app/myapp\n")),(0,l.kt)("p",null,"This example syncs all files from the folder ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," to the server."),(0,l.kt)("p",null,"At the beginning of the sync, you will be asked whether you want to backup and cleanup the given folder. If you choose ",(0,l.kt)("inlineCode",{parentName:"p"},"yes"),", then the content of the remote folder will be downloaded and stored in your workspace inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"backup")," folder, and then the remote content gets deleted. This is handy in case you want to start with a clean sync state between local and server side."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This is a one-way-sync from local to server. Changes made on the server-side will not be merged to your local sources. If you need such an approach, please refer to source managament tools like Git, for example, which have built-in merge conflict handling and concurrent editing features."))),(0,l.kt)("h3",{id:"pi-update"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi update")),(0,l.kt)("p",null,"This looks for an update of the CLI and installs it if a newer version exists."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi update\n")),(0,l.kt)("h2",{id:"kubernetes-commands"},"Kubernetes Commands"),(0,l.kt)("p",null,"Since version v3.0.13 the CLI also contains some useful commands in order to make it easier to work with the Kubernetes backend of PIPEFORCE. These commands are intended mainly to simplify the development for backend developers and DevOps."),(0,l.kt)("p",null,"In order to be able to use these extended commands, ",(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/tools/"},"kubectl")," must be installed and its current context must be configured in a way to successfully access to the Kubernetes cluster, the commands must be targeted to."),(0,l.kt)("p",null,"All commands specific to Kubernetes are prefixed with a ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"k"))," for example ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"k")),(0,l.kt)("inlineCode",{parentName:"p"},"upload"),"."),(0,l.kt)("p",null,"All k-commands are executed inside the namespace of the currently active instance, selected by ",(0,l.kt)("inlineCode",{parentName:"p"},"pi setup")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"pi instance"),"."),(0,l.kt)("h3",{id:"pi-kdownload"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi kdownload")),(0,l.kt)("p",null,"Downloads a file or folder (recursively) from a container inside Kubernetes to the local file system. Automatically selects the container by resolving the given service name."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kdownload <SERVICE> <REMOTE_PATH> <LOCAL_PATH>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kdownload hub /srv/ /Users/user1/\n")),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"For Windows users")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Make sure to not use backslashes ",(0,l.kt)("inlineCode",{parentName:"p"},"\\")," or drive letters like ",(0,l.kt)("inlineCode",{parentName:"p"},"C:"),"for example in your path. You have to rewrite a path like ",(0,l.kt)("inlineCode",{parentName:"p"},"C:\\myfolder")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"C/myfolder")," or simply ",(0,l.kt)("inlineCode",{parentName:"p"},"/myfolder"),"."))),(0,l.kt)("h3",{id:"pi-kexec"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi kexec")),(0,l.kt)("p",null,"Executes a command inside a container within Kubernetes. Automatically selects the container by resolving the given service name."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kexec <SERVICE> -- <REMOTE_COMMAND>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kexec hub -- ls -l\n")),(0,l.kt)("h3",{id:"pi-kpodname"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi kpodname")),(0,l.kt)("p",null,"Automatically detects the internal pod names for a given PIPEFORCE service name and returns them."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kpodname <SERVICE>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kpodname hub\n")),(0,l.kt)("h3",{id:"pi-ksync"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi ksync")),(0,l.kt)("p",null,"Syncs file and folder changes (create, modify, delete) inside a local folder (recursively) with the remote folder in a container. Automatically selects the container by resolving the given service name."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi ksync <SERVICE> <LOCAL_PATH> <REMOTE_PATH> [<CHOWN>]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi ksync drive /Users/me/git/drive/ /var/www/html www-data:root\n")),(0,l.kt)("p",null,"This example (one-way) syncs any local changes to the remote container and applies a ",(0,l.kt)("inlineCode",{parentName:"p"},"chown"),"  with ",(0,l.kt)("inlineCode",{parentName:"p"},"www-data:root")," recursively on the synced sources."),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"For Windows users")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Make sure to not use backslashes ",(0,l.kt)("inlineCode",{parentName:"p"},"\\")," or drive letters like ",(0,l.kt)("inlineCode",{parentName:"p"},"C:"),"for example in your path. You have to rewrite a path like ",(0,l.kt)("inlineCode",{parentName:"p"},"C:\\myfolder")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"C/myfolder")," or simply ",(0,l.kt)("inlineCode",{parentName:"p"},"/myfolder"),"."))),(0,l.kt)("h3",{id:"pi-kupload"},(0,l.kt)("inlineCode",{parentName:"h3"},"pi kupload")),(0,l.kt)("p",null,"Uploads a file or folder (recursively) from local file system to a container inside Kubernetes. Automatically selects the container by resolving the given service name."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kupload <SERVICE> <LOCAL_PATH> <REMOTE_PATH>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi kupload hub /Users/user1/ /srv/ \n")),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"For Windows users")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Make sure to not use backslashes ",(0,l.kt)("inlineCode",{parentName:"p"},"\\")," or drive letters like ",(0,l.kt)("inlineCode",{parentName:"p"},"C:"),"for example in your path. You have to rewrite a path like ",(0,l.kt)("inlineCode",{parentName:"p"},"C:\\myfolder")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"C/myfolder")," or simply ",(0,l.kt)("inlineCode",{parentName:"p"},"/myfolder"),"."))),(0,l.kt)("h2",{id:"local-development"},"Local Development"),(0,l.kt)("p",null,"PIPEFORCE gives you full source code control on any of your application resources. This way you can put also the low code sources under GitOps control the same way you would do with any other source code."),(0,l.kt)("p",null,"The local low-code workspace is a folder on your local machine, where you can store and edit all of your low-code configuration files and scripts, and then sync them with the PIPEFORCE property store with a single call of ",(0,l.kt)("inlineCode",{parentName:"p"},"pi publish"),"."),(0,l.kt)("p",null,"You could manage all properties in the property store with the ",(0,l.kt)("inlineCode",{parentName:"p"},"property.*")," commands and the CLI using ",(0,l.kt)("inlineCode",{parentName:"p"},"pi pipeline"),"."),(0,l.kt)("p",null,"This might be useful for small changes. But, if you want to develop and customize full business applications, we recommend you to use the local low-code workspace. This way you can track changes more easily and be prepared for a good change management process."),(0,l.kt)("p",null,"The low-code workspace will mirror the property store properties as a local hierarchy of folders and files. Any configuration and script file created locally inside this workspace, can then easily be uploaded to the property store with a single command. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish src/global/app/myapp/*\n")),(0,l.kt)("p",null,"This scans the folder ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," inside the workspace, and uploads only those resources which have been changed since last upload or have been created since then."),(0,l.kt)("p",null,"You can also use the short form of the command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish \n")),(0,l.kt)("p",null,"This will publish any new or changes resources inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"src")," folder to the server."),(0,l.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"To set-up your local low-code workspace, you need to first download and install the CLI as described here: ",(0,l.kt)("a",{parentName:"p",href:"../downloads"},"Downloads")),(0,l.kt)("p",null,"Furthermore, we recommend you to download and install the free source code editor Visual Studio Code (as explained in the above link)"),(0,l.kt)("p",null,"Even if you have a different favorite editor, we recommend you to start with this one, since it is easier to follow all of the examples. Later, you can switch to a different editor if you want."),(0,l.kt)("h3",{id:"create-a-new-workspace"},"Create a new workspace"),(0,l.kt)("p",null,"After you have installed the CLI (",(0,l.kt)("a",{parentName:"p",href:"../api/cli"},"Command Line Interface (CLI)"),"), you can create a new workspace by using this command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi setup\n")),(0,l.kt)("p",null,"This will ask you a few questions to set-up the workspace correctly."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Namespace [None]:\n")),(0,l.kt)("p",null,"Here, you need to type-in the namespace of your PIPEFORCE instance, which is typically the name of your company. If you\u2019re not sure what your namespace is, ask ",(0,l.kt)("a",{parentName:"p",href:"mailto:support@pipeforce.io"},"support@pipeforce.io"),"."),(0,l.kt)("p",null,"Typically the namespace is the ",(0,l.kt)("strong",{parentName:"p"},"NAMESPACE")," part of your instance url (not the full url!):",(0,l.kt)("br",{parentName:"p"}),"\n","https://",(0,l.kt)("strong",{parentName:"p"},"NAMESPACE"),".pipeforce.net"),(0,l.kt)("p",null,"For example, if your instance url is ",(0,l.kt)("a",{parentName:"p",href:"https://acme.pipeforce.net"},"https://",(0,l.kt)("strong",{parentName:"a"},"acme"),".pipeforce.net"),", then your namespace would be ",(0,l.kt)("strong",{parentName:"p"},"acme"),"."),(0,l.kt)("p",null,"Type this name in, and then press enter."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Username [None]:\n")),(0,l.kt)("p",null,"Type-in your username."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Password []:\n")),(0,l.kt)("p",null,"Type-in your password to login into the system."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Your password is never stored by the CLI for security reasons. Instead, the CLI automatically exchanges this password with an API access token and stores this access token. This token is valid for 30 days. That means: If you did not login into PIPEFORCE for longer than 30 days, you need to re-generate this access token. You can do that by simply calling ",(0,l.kt)("inlineCode",{parentName:"p"},"pi setup")," later, which asks again for credentials, and then creates and stores a new access token for you if the login was successful."))),(0,l.kt)("p",null,"Congratulations! A new property store workspace was been created for you under",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"$USER_HOME/pipeforce")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Replace ",(0,l.kt)("inlineCode",{parentName:"p"},"$USER_HOME")," by the path of your user home folder, which differs depending on your current operating system."),(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"For Windows, this is typically: ",(0,l.kt)("inlineCode",{parentName:"li"},"C:\\Users\\YOUR_USERNAME")),(0,l.kt)("li",{parentName:"ul"},"For Mac, this is typically: ",(0,l.kt)("inlineCode",{parentName:"li"},"/Users/YOUR_USERNAME"))))),(0,l.kt)("h3",{id:"using-visual-studio-code"},"Using Visual Studio Code"),(0,l.kt)("p",null,"Visual Studio Code (in short: VS Code) is a free resource editor which works nicely together with the pi tool and simplifies customizing PIPEFORCE. You can also use a different editor, but we recommend you to use this one at least for the starting phase."),(0,l.kt)("h4",{id:"download-and-installation"},"Download and Installation"),(0,l.kt)("p",null,"You can download Visual Studio Code for free here: ",(0,l.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/download"},"https://code.visualstudio.com/download")),(0,l.kt)("h4",{id:"loading-the-workspace-in-vs-code"},"Loading the workspace in VS Code"),(0,l.kt)("p",null,"After you have created a new PIPEFORCE customization workspace, navigate to its location which looks similar to this (could differ depending on your operating system):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd /Users/USERNAME/pipeforce/\n")),(0,l.kt)("p",null,"Inside this folder, there is a file called ",(0,l.kt)("inlineCode",{parentName:"p"},"PIPEFORCE.code-workspace"),". Double click this file in order to start the Visual Studio Code. Note: Visual Studio Code needs to be installed beforehand."),(0,l.kt)("p",null,"This will start Visual Studio Code with everything already set-up, so you can immediately start to create and deploy customizations in PIPEFORCE:"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(228).Z})),(0,l.kt)("h4",{id:"show-the-terminal"},"Show the terminal"),(0,l.kt)("p",null,"It is comfortable to also show the terminal inside of VS Code. To do so, in the top menu, click ",(0,l.kt)("inlineCode",{parentName:"p"},"Terminal \u2192 New Terminal"),". This opens a new terminal at the bottom of VS Code:"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(9100).Z})),(0,l.kt)("h4",{id:"create-a-new-resource"},"Create a new resource"),(0,l.kt)("p",null,"You can now use the terminal to create, for example, a new pipeline by typing this command in the VS Code terminal:"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(3604).Z})),(0,l.kt)("p",null,"After pressing enter, you will be asked for a name of the new pipeline. Type-in ",(0,l.kt)("inlineCode",{parentName:"p"},"helloworld"),", and press enter again."),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(9586).Z})),(0,l.kt)("p",null,"After this, a new pipeline file was created for you with the name ",(0,l.kt)("inlineCode",{parentName:"p"},"helloworld.pi.yaml"),":"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(9586).Z})),(0,l.kt)("p",null,"If you open this file, you can see it containing a simple hello world demo pipeline, which logs \u201cHello World\u201d into the server log, and writes it into the body."),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(6810).Z})),(0,l.kt)("h4",{id:"execute-a-pipeline-in-the-terminal"},"Execute a pipeline in the terminal"),(0,l.kt)("p",null,"To run the pipeline right from within your VS Code, use this command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi pipeline file src/global/pipeline/helloworld.pi.yaml\n")),(0,l.kt)("p",null,"You should then see the output of this pipeline in the terminal."),(0,l.kt)("h3",{id:"enable-code-completion-for-pipelines"},"Enable code completion for pipelines"),(0,l.kt)("p",null,"In order to enable code completion for pipelines inside of VS Code, you can optionally install the free YAML plugin from the Microsoft VS Code marketplace."),(0,l.kt)("p",null,"Open this url in your browser:",(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml"},"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml")),(0,l.kt)("p",null,"Click install. Allow this link to open with VS Code, if requested."),(0,l.kt)("p",null,"Now, you should be able to use pipeline code completion."),(0,l.kt)("p",null,"To test it, add a new command in the ",(0,l.kt)("inlineCode",{parentName:"p"},"helloworld.pi.yaml")," file. After you started typing, you should get a suggestion list of all available pipeline commands including inline documentation:"),(0,l.kt)("p",null,(0,l.kt)("img",{src:t(4550).Z})),(0,l.kt)("h3",{id:"publish-a-resource"},"Publish a resource"),(0,l.kt)("p",null,"After you have created a resource locally, you can upload it to the property store with a simple command inside your VS Code terminal:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pi publish\n")),(0,l.kt)("p",null,"After the command was executed, you can see that your pipeline has been successfully created into the property store."),(0,l.kt)("p",null,"Anytime you change a resource in the workspace, calling ",(0,l.kt)("inlineCode",{parentName:"p"},"pi publish")," afterwards, will create or update only those resources which have been changed after the last publish. This way, you can work in a very effective way."),(0,l.kt)("h2",{id:"report-an-issue"},"Report an Issue"),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Your help is needed!")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In case you're missing something on this page, you found an error or you have an idea for improvement, please ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/pipeforce/pipeforce.github.io/issues/new"},"click here to create a new issue"),". Another way to contribute is, to click ",(0,l.kt)("strong",{parentName:"p"},"Edit this page")," below and directly add your changes in GitHub. Many thanks for your contribution in order to improve PIPEFORCE!"))))}d.isMDXComponent=!0},228:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/vs-code-9da92352d5bbfc8dc6edb8a64ba708f7.png"},9100:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/vs-code1-830004e7c75f19b6201930875537b902.png"},6810:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/vs-code3-0835feca86fd63d2a1139eca827b72b9.png"},4550:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/vs-code4-866b9cb2829caacd53d9d8431475dbba.png"},3604:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/vscode-terminal-1ea94d74bdfa3f4b5a9e21f58709a483.png"},9586:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/vscode-terminal1-59a4b8e8360c4c0724de74bb9e306daa.png"}}]);