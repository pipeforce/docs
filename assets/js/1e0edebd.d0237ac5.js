"use strict";(self.webpackChunkdevdocs=self.webpackChunkdevdocs||[]).push([[2379],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||a;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},s="Buttons",i={unversionedId:"guides/forms/forms-buttons",id:"guides/forms/forms-buttons",title:"Buttons",description:"By default, each form shows a single submit button. If this button is pressed, the data of the form will be stored into the property store as a new instance property.",source:"@site/docs/guides/forms/060_forms-buttons.md",sourceDirName:"guides/forms",slug:"/guides/forms/forms-buttons",permalink:"/docs/guides/forms/forms-buttons",draft:!1,editUrl:"https://github.com/pipeforce/pipeforce.github.io/edit/master/docs/guides/forms/060_forms-buttons.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"File Upload",permalink:"/docs/guides/forms/forms-upload"},next:{title:"Forms fields",permalink:"/docs/guides/forms/forms-fields"}},u={},p=[{value:"Step1",id:"step1",level:2},{value:"Step 2",id:"step-2",level:2},{value:"Report an Issue",id:"report-an-issue",level:2}],l={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"buttons"},"Buttons"),(0,o.kt)("p",null,"By default, each form shows a single submit button. If this button is pressed, the data of the form will be stored into the property store as a new instance property."),(0,o.kt)("p",null,"You can change this default behaviour in two steps:"),(0,o.kt)("h2",{id:"step1"},"Step1"),(0,o.kt)("p",null,"Change the JSON Schema and add a new field of type ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")," for each button. This field should carry the value of the button after it was clicked (",(0,o.kt)("inlineCode",{parentName:"p"},"true"),") or not (",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"). For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n\n  "properties": {\n    "buttonYes": {\n      "type": "boolean"\n    },\n    "buttonNo": {\n      "type": "boolean"\n    } \n  }\n}\n')),(0,o.kt)("h2",{id:"step-2"},"Step 2"),(0,o.kt)("p",null,"\u201cTell\u201d the form configuration, that it should \u201cdraw\u201d these fields as buttons using the ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," attribute. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Approval",\n  "description": "Do you approve?",  \n  ...\n  "layout": {\n    "items": [      \n      {"field": "buttonYes", "render": "button"},      \n      {"field": "buttonNo", "render": "button"}\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"After a button has been clicked, a new object is created and stored in the property store which has a structure like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "buttonYes": true,\n  "buttonNo": false\n}\n')),(0,o.kt)("p",null,"Here, you can see that the \u201cYes\u201d button was clicked."),(0,o.kt)("p",null,"You can then create a event.listen pipeline to listen for such a submit, and react accordingly."),(0,o.kt)("h2",{id:"report-an-issue"},"Report an Issue"),(0,o.kt)("admonition",{title:"Your help is needed!",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"In case you're missing something on this page, you found an error or you have an idea for improvement, please ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pipeforce/pipeforce.github.io/issues/new"},"click here to create a new issue"),". Another way to contribute is, to click ",(0,o.kt)("strong",{parentName:"p"},"Edit this page")," below and directly add your changes in GitHub. Many thanks for your contribution in order to improve PIPEFORCE!")))}c.isMDXComponent=!0}}]);